//
//  WebArticleManageVC.m
//  ScmProject
//
//  Created by leosun on 2020/5/21.
//  Copyright © 2020 session. All rights reserved.
//

#import "WebArticleManageVC.h"
#import "WebsiteArticleManagerCell.h"
#import "WebPublishArticleVC.h"
#import "WebsiteArticelModel.h"
#import "DNSDatePickerVC.h"
#import "DNSFilterSelectVC.h"
#import "WebArticleDetailVC.h"

@interface WebArticleManageVC ()<UITableViewDataSource,UITableViewDelegate,CYLTableViewPlaceHolderDelegate>{
    int page;
}

@property(nonatomic,strong)NSMutableArray *datas;
@property(nonatomic,strong)NSArray *stateDatas;
@property(nonatomic,strong)NSString *time;
@property(nonatomic,strong)NSString *stateStr;
@property(nonatomic,assign)long navigationId;

@end

@implementation WebArticleManageVC

- (void)viewDidLoad {
    [super viewDidLoad];
    [self setBanar:NSLocalizedString(@"文章管理", nil) hiddeBack:NO];
    self.topConst.constant = navBarHeight;
    [self prepareUi];
    [self addRightBtn];
}

-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [self getData:YES];
}

-(void)prepareUi{
    [self.tableview registerNib:[UINib nibWithNibName:@"WebsiteArticleManagerCell" bundle:nil] forCellReuseIdentifier:@"WebsiteArticleManagerCell"];
    [self addRefresh];
    [self.tableview.mj_header beginRefreshing];
    
    WeakSelf(self);
    UITapGestureRecognizer *tap1 = [[UITapGestureRecognizer alloc] init];
    [[tap1 rac_gestureSignal] subscribeNext:^(id x) {
        [weakself timeSelect];
    }];
    [self.timeView addGestureRecognizer:tap1];
    
    UITapGestureRecognizer *tap2 = [[UITapGestureRecognizer alloc] init];
    [[tap2 rac_gestureSignal] subscribeNext:^(id x) {
        [weakself getNavtionData];
    }];
    [self.typeView addGestureRecognizer:tap2];
    
    UITapGestureRecognizer *tap3 = [[UITapGestureRecognizer alloc] init];
    [[tap3 rac_gestureSignal] subscribeNext:^(id x) {
        [weakself stateSelect];
    }];
    [self.stateView addGestureRecognizer:tap3];
}

-(void)addRightBtn{
    UIView *bar = [self gerNavBar];
    CGFloat width = [[GDLocalizableController userLanguage] isEqualToString:ENGLISH]?80:60;
    UIView *view = [[UIView alloc] initWithFrame:CGRectMake(ksrcwidth - width - 15,navBarHeight - 35, width, 20)];
    [bar addSubview:view];
    
    UIButton *rightBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    rightBtn.frame = CGRectMake(0, 0, width, 20);
    [rightBtn setTitle:NSLocalizedString(@"发布文章", nil) forState:UIControlStateNormal];
    [rightBtn setTitleColor:[UIColor colorWithRGBHex:@"#323236"] forState:UIControlStateNormal];
    rightBtn.titleLabel.font = [UIFont boldSystemFontOfSize:14.f];
    rightBtn.titleLabel.textAlignment = NSTextAlignmentRight;
    WeakSelf(self);
    [[rightBtn rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        [weakself publishClick];
    }];
    [view addSubview:rightBtn];
}

-(void)addRefresh{
    WeakSelf(self);
    self.tableview.mj_header = [PersonGifHeader headerWithRefreshingBlock:^{
        [weakself getData:YES];
    }];
    //使用这个加载  可以隐藏最后的一行字
    self.tableview.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingBlock:^{
        [weakself getData:NO];
    }];
}

-(void)getData:(BOOL)ifFresh{
    ifFresh?(page = 1):page++;
    NSString *tempStateStr = @"";
    if ([self.stateDatas containsObject:AssectString(self.stateStr)]) {
        NSInteger index = [self.stateDatas indexOfObject:AssectString(self.stateStr)];
        tempStateStr = index == 0?@"":[NSString stringWithFormat:@"%ld",index - 1];
    }
    NSDictionary *dict = @{@"website_id":[NSString stringWithFormat:@"%ld",self.website_id],@"time":AssectString(self.time),@"website_category_navigation_id":self.navigationId == 0?@"":[NSString stringWithFormat:@"%ld",self.navigationId],@"chain_status":AssectString(tempStateStr),@"page":[NSString stringWithFormat:@"%ld",(long)page]};
    WeakSelf(self);
    [WebServices postFormReqUrl:WebsiteArticleList param:dict loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                !ifFresh?:[weakself.datas removeAllObjects];
                NSMutableArray<WebsiteArticelModel*> *applicationList = [WebsiteArticelModel mj_objectArrayWithKeyValuesArray:json[@"data"][@"data"]];
                [weakself.datas addObjectsFromArray:applicationList];
            }
        }
        [weakself.tableview cyl_reloadData];
        [weakself.tableview.mj_header endRefreshing];
        [weakself.tableview.mj_footer endRefreshing];
    }];
}

#pragma -mark CYLTableViewPlaceHolderDelegate
-(BOOL)enableScrollWhenPlaceHolderViewShowing{
    return YES;
}

-(UIView *)makePlaceHolderView{
    EmptyView *view = [EmptyView flagView];
    view.contents.text = NSLocalizedString(@"当前暂无文章", nil);
    return view;
}

-(void)publishClick{
    WebPublishArticleVC *publish = [[WebPublishArticleVC alloc] init];
    publish.website_id = self.website_id;
    [self.navigationController pushViewController:publish animated:YES];
}

-(void)timeSelect{
    DNSDatePickerVC *select = [[DNSDatePickerVC alloc] init];
    select.modalPresentationStyle = UIModalPresentationOverCurrentContext;
    select.daySubject = [RACSubject  subject];
    if ([AssectString(self.time) isEqualToString:NSLocalizedString(@"至今", nil)] || [AssectString(self.time) isEqualToString:@""]) {
        select.selectYear = @"";
        select.selectMonth = @"";
        select.selectDay = @"";
    }else{
        select.selectYear = [AssectString(self.time) componentsSeparatedByString:@"-"][0];
        select.selectMonth = [AssectString(self.time) componentsSeparatedByString:@"-"][1];
        select.selectDay = [AssectString(self.time) componentsSeparatedByString:@"-"][2];
    }
    WeakSelf(self);
    [select.daySubject subscribeNext:^(NSString *day) {
        weakself.time = [day isEqualToString:NSLocalizedString(@"至今", nil)]?@"":day;
        weakself.timeLabel.text = day;
        weakself.timeLabel.textColor = [UIColor colorWithRGBHex:@"#18181A"];
        weakself.timeLabel.font = [UIFont boldSystemFontOfSize:14];
        weakself.timeImgV.image = [UIImage imageNamed:@"icon_shop_up"];
        [weakself.tableview.mj_header beginRefreshing];
    }];
    [self presentViewController:select animated:NO completion:nil];
}

-(void)stateSelect{
    DNSFilterSelectVC *select = [[DNSFilterSelectVC alloc] init];
    select.dataType = 0;
    select.datas = self.stateDatas;
    select.selectStr = AssectString(self.stateStr);
    select.modalPresentationStyle = UIModalPresentationOverCurrentContext;
    select.subject = [RACSubject subject];
    WeakSelf(self);
    [select.subject subscribeNext:^(NSString *name) {
        weakself.stateStr = name;
        weakself.stateLabel.text = name;
        weakself.stateLabel.textColor = [UIColor colorWithRGBHex:@"#18181A"];
        weakself.stateLabel.font = [UIFont boldSystemFontOfSize:14];
        weakself.stateImgV.image = [UIImage imageNamed:@"icon_shop_up"];
        [weakself.tableview.mj_header beginRefreshing];
    }];
    [self presentViewController:select animated:NO completion:nil];
}

-(void)getNavtionData{
    WeakSelf(self);
    [self showLoading:@"" allowsOpOperation:YES];
    NSDictionary *dict = @{@"website_id":[NSString stringWithFormat:@"%ld",self.website_id]};
    [WebServices postFormReqUrl:WebsiteCategoryNavigation param:dict loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        [weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                [weakself selectNavigation:[json[@"data"][@"data"] mutableCopy]];
            }else{
                [weakself showMsg:json[@"msg"] location:centre];
            }
        }else{
            [weakself showMsg:NSLocalizedString(@"网络异常，请稍后重试", nil) location:centre];
        }
    }];
}

-(void)selectNavigation:(NSMutableArray *)datas{
    DNSFilterSelectVC *select = [[DNSFilterSelectVC alloc] init];
    select.dataType = 3;
    if (datas.count == 0) {
        [datas addObject:@{@"id":@0,@"name":NSLocalizedString(@"全部", nil)}];
    }else{
        [datas insertObject:@{@"id":@0,@"name":NSLocalizedString(@"全部", nil)} atIndex:0];
    }
    select.datas = datas;
    select.selectStr = [NSString stringWithFormat:@"%ld",self.navigationId];
    select.modalPresentationStyle = UIModalPresentationOverCurrentContext;
    select.subject = [RACSubject subject];
    WeakSelf(self);
    [select.subject subscribeNext:^(NSDictionary *dict) {
        weakself.navigationId = [dict[@"id"] longLongValue];
        weakself.typeLabel.text = dict[@"name"];
        weakself.typeLabel.textColor = [UIColor colorWithRGBHex:@"#18181A"];
        weakself.typeLabel.font = [UIFont boldSystemFontOfSize:14];
        weakself.typeImgV.image = [UIImage imageNamed:@"icon_shop_up"];
        [weakself.tableview.mj_header beginRefreshing];
    }];
    [self presentViewController:select animated:NO completion:nil];
}

#pragma -mark DNBrowserNewsTableViewCell
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return self.datas.count;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    WebsiteArticleManagerCell *cell = [tableView dequeueReusableCellWithIdentifier:@"WebsiteArticleManagerCell"];
    cell.model = self.datas[indexPath.row];
    cell.operateBtn.tag = indexPath.row;
    [cell.operateBtn addTarget:self action:@selector(operateClick:) forControlEvents:UIControlEventTouchUpInside];
    return cell;
}

-(void)operateClick:(UIButton *)sender{
    UIAlertController *sheetVC = [UIAlertController alertControllerWithTitle:nil message:nil preferredStyle:UIAlertControllerStyleActionSheet];
    WeakSelf(self);
    UIAlertAction*  sheetBtn1=[UIAlertAction actionWithTitle:NSLocalizedString(@"展示/隐藏文章", nil) style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        [weakself showOrdHideArticle:sender.tag];
    }];
    UIAlertAction*  sheetBtn2=[UIAlertAction actionWithTitle:NSLocalizedString(@"查看", nil) style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        WebsiteArticelModel *model = weakself.datas[sender.tag];
        WebArticleDetailVC *articleDetail = [[WebArticleDetailVC alloc] init];
        articleDetail.articleid = model.articleId;
        articleDetail.website_id = weakself.website_id;
        articleDetail.articleTitle = AssectString(model.title);
        [weakself.navigationController pushViewController:articleDetail animated:YES];
    }];
    UIAlertAction*  sheetBtn=[UIAlertAction actionWithTitle:NSLocalizedString(@"取消", nil) style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {
    }];
    
    [sheetVC addAction:sheetBtn1];
    [sheetBtn1 setValue:[UIColor colorWithRGBHex:@"#323236"] forKey:@"titleTextColor"];
    [sheetVC addAction:sheetBtn2];
    [sheetBtn2 setValue:[UIColor colorWithRGBHex:@"#323236"] forKey:@"titleTextColor"];
    [sheetVC addAction:sheetBtn];
    [sheetBtn setValue:[UIColor colorWithRGBHex:@"#323236"] forKey:@"titleTextColor"];
    [self presentViewController:sheetVC animated:YES completion:nil];
}

-(void)showOrdHideArticle:(NSInteger )tag{
    WebsiteArticelModel *model = self.datas[tag];

    WeakSelf(self);
    [self showLoading:@"" allowsOpOperation:YES];
    NSDictionary *dict = @{@"website_id":[NSString stringWithFormat:@"%ld",self.website_id],@"website_article_id":[NSString stringWithFormat:@"%ld",model.articleId]};
    [WebServices postFormReqUrl:WebsiteArticleUpdate param:dict loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        [weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                [weakself showMsg:json[@"msg"] withBlcok:^{
                    model.display_status = model.display_status == 0?1:0;
                    [weakself.datas replaceObjectAtIndex:tag withObject:model];
                    [weakself.tableview reloadRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:tag inSection:0]] withRowAnimation:(UITableViewRowAnimationNone)];
                }];
            }else{
                [weakself showMsg:json[@"msg"] location:centre];
            }
        }else{
            [weakself showMsg:NSLocalizedString(@"网络异常，请稍后重试", nil) location:centre];
        }
    }];
}

#pragma -mark getter
-(NSMutableArray *)datas{
    if (!_datas) {
        _datas = [NSMutableArray array];
    }
    return _datas;
}

//0未上链，1上链中，2上链成功，3上链失败
-(NSArray *)stateDatas{
    if (!_stateDatas) {
        _stateDatas = [NSArray arrayWithObjects:NSLocalizedString(@"全部", nil),NSLocalizedString(@"未上链", nil),NSLocalizedString(@"上链中", nil),NSLocalizedString(@"上链成功", nil),NSLocalizedString(@"上链失败", nil), nil];
    }
    return _stateDatas;
}
@end

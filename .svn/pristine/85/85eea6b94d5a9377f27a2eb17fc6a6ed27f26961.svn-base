//
//  DNBrowserDetailServiceVC.m
//  ScmProject
//
//  Created by leosun on 2019/12/21.
//  Copyright © 2019 session. All rights reserved.
//

#import "DNBrowserSecretServiceVC.h"
#import "CHSwitch.h"
#import "DNSFilterSelectVC.h"
#import "DNBrowserSecretServiceTypeVC.h"
#import "DNBrowserDetailVC.h"
#import "BrowserServicePayDetailVC.h"

@interface DNBrowserSecretServiceVC ()

@property(nonatomic,strong) NSString *selectDayId;
@property(nonatomic,strong) NSString *topSelectDay;
@property(nonatomic,strong) NSString *topSelectPrice;

///  0是免费文章   1是付费文章
@property(nonatomic,assign) long serviceType;
//最少输入的字数
@property(nonatomic,strong)NSString *word_count;
//置顶
@property(nonatomic,weak)CHSwitch *openSwitch;
//置顶
@property(nonatomic,weak)CHSwitch *topSwitch;

@property(nonatomic,weak)UIButton *rightBtn;

@property(nonatomic,strong)NSMutableArray *datas;

@end

@implementation DNBrowserSecretServiceVC

- (void)viewDidLoad {
    [super viewDidLoad];
    [self prepareUi];
    [self addRightBtn];
    [self getWordCount];
}

-(void)prepareUi{
    [self setBanar:NSLocalizedString(@"服务项", nil) hiddeBack:NO];
    self.topConst.constant = navBarHeight;
    
    CHSwitch *openSwitch = [[CHSwitch alloc] initWithFrame:CGRectMake(ksrcwidth - 60, 12.5, 45, 45)];
    openSwitch.tintColor = [UIColor colorWithRGBHex:@"#EEEEF0"];
    openSwitch.onTintColor = [UIColor colorWithRGBHex:@"#5151F0"];
    openSwitch.shadow = NO;
    openSwitch.on = NO;
    openSwitch.tag = 10;
    [openSwitch addTarget:self action:@selector(changeState:) forControlEvents:(UIControlEventValueChanged)];
    [self.openView addSubview:_openSwitch = openSwitch];
    
    CHSwitch *topchSwith = [[CHSwitch alloc] initWithFrame:CGRectMake(ksrcwidth - 60, 7.5, 45, 45)];
    topchSwith.tintColor = [UIColor colorWithRGBHex:@"#EEEEF0"];
    topchSwith.onTintColor = [UIColor colorWithRGBHex:@"#5151F0"];
    topchSwith.shadow = NO;
    topchSwith.tag = 11;
    [topchSwith addTarget:self action:@selector(changeState:) forControlEvents:(UIControlEventValueChanged)];
    [self.topView addSubview:_topSwitch = topchSwith];
    
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] init];
    WeakSelf(self);
    [[tap rac_gestureSignal] subscribeNext:^(id x) {
        [weakself selectDays];
    }];
    [self.daysView addGestureRecognizer:tap];
    
    UITapGestureRecognizer *tap1 = [[UITapGestureRecognizer alloc] init];
    [[tap1 rac_gestureSignal] subscribeNext:^(id x) {
        DNBrowserSecretServiceTypeVC *type = [[DNBrowserSecretServiceTypeVC alloc] init];
        type.modalPresentationStyle = UIModalPresentationOverCurrentContext;
        type.serviceType = weakself.serviceType;
        type.serviceSubject = [RACSubject subject];
        [type.serviceSubject subscribeNext:^(NSString *service) {
            weakself.serviceType = [service intValue];
            [weakself setData];
        }];
        [weakself presentViewController:type animated:NO completion:^{
            
        }];
    }];
    [self.selectView addGestureRecognizer:tap1];
    
    self.freeText.attributedPlaceholder = [[NSMutableAttributedString alloc]initWithString:self.freeText.placeholder attributes:@{NSForegroundColorAttributeName:[UIColor colorWithRGBHex:@"#AAAAB5"],NSFontAttributeName:[UIFont systemFontOfSize:12]}];
    self.freeText.rightViewMode = UITextFieldViewModeAlways;
    self.freeText.rightView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 10, 35)];
    [[self.freeText rac_signalForControlEvents:(UIControlEventEditingChanged)] subscribeNext:^(id x) {
        weakself.freeText.text = [weakself.freeText PreciseFigures:0];
    }];
    
    self.payText.attributedPlaceholder = [[NSMutableAttributedString alloc]initWithString:self.payText.placeholder attributes:@{NSForegroundColorAttributeName:[UIColor colorWithRGBHex:@"#AAAAB5"],NSFontAttributeName:[UIFont systemFontOfSize:12]}];
    self.payText.rightViewMode = UITextFieldViewModeAlways;
    self.payText.rightView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 10, 35)];
    [[self.payText rac_signalForControlEvents:(UIControlEventEditingChanged)] subscribeNext:^(id x) {
        weakself.payText.text = [weakself.payText PreciseFigures:2];
    }];
    
    self.payView.hidden = YES;
    self.payHeightConst.constant = 0;
}

-(void)addRightBtn{
    UIView *bar = [self gerNavBar];
    CGFloat width = [[GDLocalizableController userLanguage] isEqualToString:ENGLISH]?80:60;
    UIView *view = [[UIView alloc] initWithFrame:CGRectMake(ksrcwidth - width - 5,navBarHeight - 35, width, 20)];
    [bar addSubview:view];
    
    UIButton *rightBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    rightBtn.frame = CGRectMake(0, 0, width, 20);
    [rightBtn setTitle:NSLocalizedString(@"确定", nil) forState:UIControlStateNormal];
    [rightBtn setTitleColor:[UIColor colorWithRGBHex:@"#5151F0"] forState:UIControlStateNormal];
    rightBtn.titleLabel.font = [UIFont boldSystemFontOfSize:14.f];
    rightBtn.titleLabel.textAlignment = NSTextAlignmentRight;
    WeakSelf(self);
    [[rightBtn rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        [weakself checkClick];
    }];
    [view addSubview:_rightBtn = rightBtn];
}

-(void)setData{
    if (self.serviceType == 0) {
        self.selectLabel.text = NSLocalizedString(@"免费文章", nil);
        self.payView.hidden = YES;
        self.payHeightConst.constant = 0;
    }else if (self.serviceType == 1){
        self.selectLabel.text = NSLocalizedString(@"付费文章", nil);
        self.payView.hidden = NO;
        self.payHeightConst.constant = 120;
    }
}

-(void)changeState:(UISwitch *)sender{
    if (sender.tag == 10) {
        self.midBgview.hidden = !sender.on;
    }else if (sender.tag == 11){
        BOOL state = sender.on;
        self.daysView.hidden = !state;
    }
}

-(void)getWordCount{
    WeakSelf(self);
    [self showLoading:NSLocalizedString(@"加载中...", nil) allowsOpOperation:YES];
    [WebServices getFormReqUrl:DomainPaymentFee param:@{} loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        [weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                weakself.word_count = AssectString(json[@"data"][@"article_chain_free_count"]);
                weakself.percentLabel.text = [NSString stringWithFormat:NSLocalizedString(@"平台抽成比例：%@%%", nil),[GaoJingDu cheng:@[AssectNumber(json[@"data"][@"article_handling_fees"]),@"100"] jindu:@"2"]];
                [weakself getDaysData];
            }else{
                [weakself showErrorView:weakself.view withBlock:^{
                    [weakself getWordCount];
                }];
            }
        }else{
            [weakself showErrorView:weakself.view withBlock:^{
                [weakself getWordCount];
            }];
        }
    }];
}

-(void)getDaysData{
    WeakSelf(self);
    [WebServices getFormReqUrl:BrowserSticky param:@{} loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        [weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                [weakself.datas addObjectsFromArray:json[@"data"][@"data"]];
                if (weakself.datas.count != 0) {
                    NSDictionary *dict = weakself.datas[0];
                    weakself.selectDayId = [NSString stringWithFormat:@"%lld",[dict[@"id"] longLongValue]];
                    weakself.topSelectDay = [NSString stringWithFormat:@"%lld",[dict[@"day"] longLongValue]];
                    weakself.topSelectPrice = AssectString(dict[@"price"]);
                    weakself.dayLabel.text = [NSString stringWithFormat:NSLocalizedString(@"%ld天(%@ CNY)", nil),[dict[@"day"] longLongValue],AssectString(dict[@"price"])];
                }
            }else{
                [weakself showErrorView:weakself.view withBlock:^{
                    [weakself getDaysData];
                }];
            }
        }else{
            [weakself showErrorView:weakself.view withBlock:^{
                [weakself getDaysData];
            }];
        }
    }];
}

-(void)selectDays{
    DNSFilterSelectVC *select = [[DNSFilterSelectVC alloc] init];
    select.dataType = 2;
    select.datas = [self.datas copy];
    select.selectStr = AssectString(self.selectDayId);
    select.modalPresentationStyle = UIModalPresentationOverCurrentContext;
    select.subject = [RACSubject subject];
    WeakSelf(self);
    [select.subject subscribeNext:^(NSDictionary *dict) {
        weakself.selectDayId = [NSString stringWithFormat:@"%lld",[dict[@"id"] longLongValue]];
        weakself.topSelectDay = [NSString stringWithFormat:@"%lld",[dict[@"day"] longLongValue]];
        weakself.topSelectPrice = AssectString(dict[@"price"]);
        weakself.dayLabel.text = [NSString stringWithFormat:NSLocalizedString(@"%ld天(%@ CNY)", nil),[dict[@"day"] longLongValue],AssectString(dict[@"price"])];
    }];
    [self presentViewController:select animated:NO completion:nil];
}

-(void)checkClick{
    if (!self.openSwitch.on)return;
    
    NSString *freeStr = [self removeSpaceAndNewline:self.freeText.text];
    NSString *payStr = [self removeSpaceAndNewline:self.payText.text];
    if (self.serviceType == 1) {
        if ([freeStr isEqualToString:@""]) {
            [self showMsg:NSLocalizedString(@"请输入免费字数", nil) location:centre];
            return;
        }
        if ([freeStr intValue] < [self.word_count intValue]) {
            [self showMsg:[NSString stringWithFormat:NSLocalizedString(@"最少输入%@个免费字数", nil),AssectString(self.word_count)] location:centre];
            return;
        }
        if ([freeStr intValue] >= self.article_count) {
            [self showMsg:NSLocalizedString(@"当前字数不满足付费要求", nil) location:centre];
            return;
        }
        if (self.article_count < [self.word_count intValue]) {
            [self showMsg:[NSString stringWithFormat:NSLocalizedString(@"文章少于%@个免费字数", nil),AssectString(self.word_count)] location:centre];
            return;
        }
        if ([payStr isEqualToString:@""] || [payStr doubleValue] <= 0) {
            [self showMsg:NSLocalizedString(@"请输入免费金额", nil) location:centre];
            return;
        }
    }
    
    //on代表开启
    if (self.topSwitch.on) {
        if ([AssectString(self.selectDayId) isEqualToString:@""]) {
            [self showMsg:NSLocalizedString(@"请选择置顶天数", nil) location:centre];
            return;
        }
        NSDictionary *dict = @{@"article_chain_id":[NSString stringWithFormat:@"%ld",self.articleid],@"is_private":@"1",@"is_toll":self.serviceType == 0?@"0":@"2",@"free_word_count":freeStr,@"charge_amount":payStr,@"is_sticky":@"1",@"sticky_configuration_id":AssectString(self.selectDayId),@"price":AssectString(self.topSelectPrice),@"day":AssectString(self.topSelectDay)};
        BrowserServicePayDetailVC *pay = [[BrowserServicePayDetailVC alloc] init];
        pay.type = 2;
        pay.dict = dict;
        [self.navigationController pushViewController:pay animated:YES];
    }else{
        [self getCheck];
    }
}

-(void)getCheck{
    NSString *freeStr = [self removeSpaceAndNewline:self.freeText.text];
    NSString *payStr = [self removeSpaceAndNewline:self.payText.text];
    [self showLoading:NSLocalizedString(@"加载中...", nil) allowsOpOperation:YES];
    NSDictionary *dict = @{@"article_chain_id":[NSString stringWithFormat:@"%ld",self.articleid],@"is_private":@"1",@"is_toll":[NSString stringWithFormat:@"%ld",self.serviceType + 1],@"free_word_count":freeStr,@"charge_amount":payStr,@"is_sticky":@"0",@"sticky_configuration_id":@"",@"price":@"",@"type":@"",@"pay_password":@""};
    WeakSelf(self);
    self.rightBtn.enabled = NO;
    [WebServices postFormReqUrl:BrowserArticleUpdate param:dict loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        [weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                [weakself showMsg:json[@"msg"] withBlcok:^{
                    [[NSNotificationCenter defaultCenter] postNotificationName:@"RefreshArticleList" object:nil];
                    [weakself popToPopVC:@"DNBrowserDetailVC"];
                }];
            }else{
                weakself.rightBtn.enabled = YES;
                [weakself showMsg:json[@"msg"] location:centre];
            }
        }else{
            weakself.rightBtn.enabled = YES;
            [weakself showMsg:NSLocalizedString(@"网络异常，请稍后重试", nil) location:centre];
        }
    }];
}

-(void)popToPopVC:(NSString* )vcStr{
    for (UIViewController *controller in self.navigationController.viewControllers) {
        if([controller isKindOfClass:NSClassFromString(vcStr)]){
            DNBrowserDetailVC *detailVC = (DNBrowserDetailVC *)controller;
            detailVC.secretType = 0;
            [self.navigationController popToViewController:detailVC animated:YES];
            break;
        }
    }
}

#pragma -mark getter
-(NSMutableArray *)datas{
    if (!_datas) {
        _datas = [NSMutableArray array];
    }
    return _datas;
}
@end

//
//  ShopAddressListVC.m
//  ScmProject
//
//  Created by leosun on 2020/7/16.
//  Copyright © 2020 session. All rights reserved.
//

#import "ShopFriendsListVC.h"
#import "AddressContentTableViewCell.h"
#import "AddressIndexTableViewCell.h"
#import "AddressIndexSelectedTableViewCell.h"
#import "ShopAddFriendsVC.h"
#import "PersonSetSafePswVC.h"

#define SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(v)  ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN(v)                 ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedAscending)

@interface ShopFriendsListVC ()<UITableViewDelegate,UITableViewDataSource,UIGestureRecognizerDelegate>{
    BOOL ifPress;
    int index;
}

@property (weak, nonatomic) IBOutlet UIView *leftBgview;
@property (weak, nonatomic) IBOutlet UITableView *leftTable;
@property (weak, nonatomic) IBOutlet UITableView *rightTable;
@property(nonatomic,strong)NSIndexPath *editingIndexPath;

@end

@implementation ShopFriendsListVC

- (void)viewDidLoad {
    [super viewDidLoad];
    [self prepareUi];
    [self addCornerLayer];
    [self addGesture];
}

#pragma mark - viewDidLayoutSubviews
- (void)viewDidLayoutSubviews{
    [super viewDidLayoutSubviews];
    
    if (self.editingIndexPath){
        [self configSwipeButtons];
    }
}

-(void)prepareUi{
    self.view.backgroundColor = [UIColor colorWithRGBHex:@"#2982FF"];
    [self.leftTable registerNib:[UINib nibWithNibName:@"AddressContentTableViewCell" bundle:nil] forCellReuseIdentifier:@"AddressContentTableViewCell"];
    [self.rightTable registerNib:[UINib nibWithNibName:@"AddressIndexTableViewCell" bundle:nil] forCellReuseIdentifier:@"AddressIndexTableViewCell"];
    [self.rightTable registerNib:[UINib nibWithNibName:@"AddressIndexSelectedTableViewCell" bundle:nil] forCellReuseIdentifier:@"AddressIndexSelectedTableViewCell"];

    UIButton *addBtn = [self.view viewWithTag:10];
    WeakSelf(self);
    [[addBtn rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        PersonSetSafePswVC *pswtip = [[PersonSetSafePswVC alloc] init];
        pswtip.modalPresentationStyle = UIModalPresentationOverCurrentContext;
        [weakself presentViewController:pswtip animated:YES completion:^{
            
        }];
//        ShopAddFriendsVC *addFriend = [[ShopAddFriendsVC alloc] init];
//        [weakself.navigationController pushViewController:addFriend animated:YES];
    }];
}

- (IBAction)backClick:(id)sender {
    [self.navigationController popViewControllerAnimated:YES];
}

-(void)addCornerLayer{
    UIBezierPath *path = [UIBezierPath bezierPathWithRoundedRect:CGRectMake(0, 0,ksrcwidth - 30, ksrcheight - navBarHeight) byRoundingCorners:UIRectCornerTopRight cornerRadii:CGSizeMake(20, 20)];
    CAShapeLayer *maskLayer = [[CAShapeLayer alloc] init];
    maskLayer.frame = CGRectMake(0, 0,ksrcwidth - 30, ksrcheight - navBarHeight);
    maskLayer.path = path.CGPath;
    self.leftBgview.layer.mask = maskLayer;
}

-(void)addGesture{
    UILongPressGestureRecognizer *longPress = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(rightTableTap:)];
    longPress.minimumPressDuration = 0.01;
    longPress.delegate = self;
    [self.rightTable addGestureRecognizer:longPress];
}

-(void)rightTableTap:(UIGestureRecognizer *)longPress{
    CGPoint point = [longPress locationInView:self.rightTable];
    index =  point.y / 20;
    if (longPress.state == UIGestureRecognizerStateBegan) {
        ifPress = YES;
    }else if (longPress.state == UIGestureRecognizerStateChanged) {
        ifPress = YES;
    }else if (longPress.state == UIGestureRecognizerStateEnded) {
        if (!ifPress)return;
        ifPress = NO;
    }
    [self.rightTable reloadData];
}

#pragma mark - configSwipeButtons
- (void)configSwipeButtons{
    // 获取选项按钮的reference
    if (@available(iOS 11.0, *)){
        // iOS 11层级 (Xcode 9编译): UITableView -> UISwipeActionPullView
        for (UIView *subview in self.leftTable.subviews)
        {
            NSLog(@"%@-----%zd",subview,subview.subviews.count);
            if ([subview isKindOfClass:NSClassFromString(@"UISwipeActionPullView")] && [subview.subviews count] >= 1)
            {
                // 和iOS 10的按钮顺序相反
                UIButton *deleteButton = subview.subviews[0];
                [self configDeleteButton:deleteButton];
            }
        }
    } else{
        // iOS 8-10层级 (Xcode 8编译): UITableView -> UITableViewCell -> UITableViewCellDeleteConfirmationView
        AddressContentTableViewCell *tableCell = [self.leftTable cellForRowAtIndexPath:self.editingIndexPath];
        for (UIView *subview in tableCell.subviews){
            NSLog(@"subview%@-----%zd",subview,subview.subviews.count);
            if ([subview isKindOfClass:NSClassFromString(@"UITableViewCellDeleteConfirmationView")] && [subview.subviews count] >= 1)
            {
                UIButton *deleteButton = subview.subviews[0];
                UIButton *editButton = subview.subviews[1];
                [self configDeleteButton:deleteButton];
                [self configEditButton:editButton];
            }
        }
    }
}

- (void)configDeleteButton:(UIButton*)deleteButton{
    if (deleteButton) {
        [deleteButton setImage:[UIImage imageNamed:@"icon_person_delete"] forState:UIControlStateNormal];
        [deleteButton setImageEdgeInsets:UIEdgeInsetsMake(0, 15, 0, 0)];
    }
}

-(void)configEditButton:(UIButton*)editButton{
    if (editButton) {
        [editButton setImage:[UIImage imageNamed:@"icon_person_edit"] forState:UIControlStateNormal];
        [editButton setImageEdgeInsets:UIEdgeInsetsMake(0, 15, 0, 0)];
    }
}

#pragma -mark UITableViewDelegate
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    if (tableView == self.leftTable) {
        return 10;
    }
    
    return 1;
}

-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    if (tableView == self.leftTable) {
        return 70;
    }
    return 0.01;
}

-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    if (tableView == self.leftTable) {
        UIView *view = [[UIView alloc] init];
        view.backgroundColor = [UIColor whiteColor];
        
        UILabel *nameLabel = [[UILabel alloc] initWithFrame:CGRectMake(22.5, 30, 50, 25)];
        nameLabel.text = @"A";
        nameLabel.textColor = [UIColor colorWithRGBHex:@"#2982FF"];
        nameLabel.font = [UIFont fontWithName:@"DINPro-Bold" size:25];
        [view addSubview:nameLabel];
        
        UIView *line = [[UIView alloc] initWithFrame:CGRectMake(16, 70 - 0.5, self.leftTable.width - 16, 0.5)];
        line.backgroundColor = [UIColor colorWithRGBHex:@"#2982FF"];
        line.alpha = 0.3;
        [view addSubview:line];
        
        return view;
    }
    return [UIView new];
}

-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    return 0.01;
}

-(UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section{
    return [UIView new];
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    if (tableView == self.leftTable) {
        return 10;
    }
    return 27;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (tableView == self.leftTable) {
        return 80;
    }
    
    //没有点击就是20 或者 index != indexPath.row
    if (!ifPress || index != indexPath.row) return 20;
    
    return 60;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (tableView == self.leftTable) {
        AddressContentTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"AddressContentTableViewCell"];
        return cell;
    }
    
    if (!ifPress || index != indexPath.row){
        AddressIndexTableViewCell *indexCell = [tableView dequeueReusableCellWithIdentifier:@"AddressIndexTableViewCell"];
        return indexCell;
    }
    AddressIndexSelectedTableViewCell *indexCell = [tableView dequeueReusableCellWithIdentifier:@"AddressIndexSelectedTableViewCell"];
//    indexCell.backgroundColor = [UIColor redColor];
    return indexCell;
}

- (void)tableView:(UITableView *)tableView willBeginEditingRowAtIndexPath:(NSIndexPath *)indexPath{
    self.editingIndexPath = indexPath;
    [self.view setNeedsLayout];   // 触发-(void)viewDidLayoutSubviews
}

- (void)tableView:(UITableView *)tableView didEndEditingRowAtIndexPath:(NSIndexPath *)indexPath{
    self.editingIndexPath = nil;
}

- (NSArray*)tableView:(UITableView *)tableView editActionsForRowAtIndexPath:(nonnull NSIndexPath *)indexPath{
    //title不设为nil 而是空字符串 理由为啥 ？   自己实践 跑到ios11以下的机器上就知道为啥了
    WeakSelf(self);
    UITableViewRowAction *deleteAction = [UITableViewRowAction rowActionWithStyle:UITableViewRowActionStyleNormal title:@"   " handler:^(UITableViewRowAction *action, NSIndexPath *indexPath){
        NSLog(@"asd");
        [tableView setEditing:NO animated:YES];  // 这句很重要，退出编辑模式，隐藏左滑菜单
    }];
    deleteAction.backgroundColor = [UIColor whiteColor];
    
    UITableViewRowAction *editAction = [UITableViewRowAction rowActionWithStyle:UITableViewRowActionStyleNormal title:@"   " handler:^(UITableViewRowAction *action, NSIndexPath *indexPath){
        NSLog(@"asd");
        [tableView setEditing:NO animated:YES];  // 这句很重要，退出编辑模式，隐藏左滑菜单
    }];
    editAction.backgroundColor = [UIColor whiteColor];
    return @[deleteAction,editAction];
}

//iOS11 后的新方法,,  可以设置image和title
- (UISwipeActionsConfiguration *)tableView:(UITableView *)tableView trailingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath *)indexPath  API_AVAILABLE(ios(11.0)){
    //删除
    UIContextualAction *deleteRowAction = [UIContextualAction contextualActionWithStyle:UIContextualActionStyleDestructive title:@"   " handler:^(UIContextualAction * _Nonnull action, __kindof UIView * _Nonnull sourceView, void (^ _Nonnull completionHandler)(BOOL)) {
        completionHandler (YES);
        NSLog(@"asd");
    }];
    deleteRowAction.image = [UIImage imageNamed:@"icon_person_delete"];
    deleteRowAction.backgroundColor = [UIColor whiteColor];
    
    UIContextualAction *editRowAction = [UIContextualAction contextualActionWithStyle:UIContextualActionStyleNormal title:@"   " handler:^(UIContextualAction * _Nonnull action, __kindof UIView * _Nonnull sourceView, void (^ _Nonnull completionHandler)(BOOL)) {
        sourceView.width = 40;
        completionHandler (YES);
        NSLog(@"asd");
    }];
    editRowAction.image = [UIImage imageNamed:@"icon_person_edit"];
    editRowAction.backgroundColor = [UIColor whiteColor];
    
    UISwipeActionsConfiguration *config = [UISwipeActionsConfiguration configurationWithActions:@[deleteRowAction,editRowAction]];
    return config;
}

#pragma -mark UIGestureRecognizerDelegate
- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer{
    return YES;
}

@end

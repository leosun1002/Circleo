//
//  NewsWebViewController.m
//  ScmProject
//
//  Created by leosun on 2019/9/26.
//  Copyright © 2019 session. All rights reserved.
//

#import "WebViewController.h"
#import <WebKit/WebKit.h>
#import "WechatShareVC.h"

@interface WebViewController ()<WKNavigationDelegate,WKUIDelegate>

@property(nonatomic,strong)WKWebView *webView;
@property(nonatomic,assign)BOOL hasZan;

@end

@implementation WebViewController

-(void)viewDidDisappear:(BOOL)animated{
    [super viewDidDisappear:animated];
    [self dismissLoading];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.heightConst.constant = navBarHeight;
    [self createwebView];
    self.titleLabel.text = self.titleStr;
    [self setData];
}

-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [self getData];
}

- (void)createwebView {
    self.view.backgroundColor=[UIColor whiteColor];
    self.edgesForExtendedLayout = UIRectEdgeNone;
    
    WKWebViewConfiguration *config = [[WKWebViewConfiguration alloc] init];
    // 设置偏好设置
    config.preferences = [[WKPreferences alloc] init];
    // 默认为0
    config.preferences.minimumFontSize = 10;
    // 默认认为YES
    config.preferences.javaScriptEnabled = YES;
    // 在iOS上默认为NO，表示不能自动通过窗口打开
    config.preferences.javaScriptCanOpenWindowsAutomatically = NO;
    config.processPool = [[WKProcessPool alloc] init];
    config.userContentController = [[WKUserContentController alloc] init];
    
    _webView = [[WKWebView alloc] initWithFrame:CGRectMake(0, navBarHeight, ksrcwidth,ksrcheight-navBarHeight-81) configuration:config];
    _webView.backgroundColor = [UIColor whiteColor];
    _webView.navigationDelegate = self;
    _webView.UIDelegate = self;
    
    _webView.allowsBackForwardNavigationGestures = YES;
    NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:[NSURL URLWithString:self.loadUrl]];
    
    [_webView loadRequest:request];
    
    [_webView addObserver:self forKeyPath:@"title" options:NSKeyValueObservingOptionNew| NSKeyValueObservingOptionOld context:nil];
    
    [self.view addSubview:_webView];
    
    if (@available(iOS 11.0,*)) {
        _webView.scrollView.contentInsetAdjustmentBehavior=UIScrollViewContentInsetAdjustmentNever;
    }else{
        self.automaticallyAdjustsScrollViewInsets = NO;
    }
}

-(void)getData{
    WeakSelf(self);
    [WebServices postFormReqUrl:NewInformationShow param:@{@"id":AssectString(self.solutionid)} loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        [weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                NSString *browser = [NSString stringWithFormat:@"%ld",[json[@"data"][@"new_information"][@"browse_count"] longValue]];
                if ([json[@"data"][@"new_information"][@"browse_count"] longValue] >= 10000) {
                    browser = [NSString stringWithFormat:@"%@w",[GaoJingDu chu:@[browser,@"10000"] jindu:@"2"]];
                }
                
                NSString *zan = [NSString stringWithFormat:@"%ld",[json[@"data"][@"new_information"][@"point_count"] longValue]];
                if ([json[@"data"][@"new_information"][@"point_count"] longValue] >= 10000) {
                    zan = [NSString stringWithFormat:@"%@w",[GaoJingDu chu:@[zan,@"10000"] jindu:@"2"]];
                }
                
                weakself.hasZan = [json[@"data"][@"new_information"][@"is_like"] boolValue];
                if ([json[@"data"][@"new_information"][@"is_like"] boolValue]) {
                    weakself.zan_image.image = [UIImage imageNamed:@"icon_zan_home_select"];
                    weakself.zanLabel.textColor = [UIColor colorWithRGBHex:@"#5151F0"];
                }else{
                    weakself.zan_image.image = [UIImage imageNamed:@"icon_zan_home"];
                    weakself.zanLabel.textColor = [UIColor colorWithRGBHex:@"#555555"];
                }
                weakself.zanLabel.text = [NSString stringWithFormat:NSLocalizedString(@"点赞(%@)", nil),zan];

                
                [weakself.readBtn setTitle:[NSString stringWithFormat:NSLocalizedString(@"阅读量(%@)", nil),browser] forState:UIControlStateNormal];
            }
        }
    }];
}

-(void)setData{
    WeakSelf(self);
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] init];
    [[tap rac_gestureSignal] subscribeNext:^(id x) {
        if (weakself.hasZan)return ;
        [weakself zanClick];
    }];
    [weakself.zanView addGestureRecognizer:tap];
}

- (IBAction)backClick:(id)sender {
    [self.navigationController popViewControllerAnimated:YES];
}

- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary *)change context:(void *)context{
    if ([keyPath isEqual: @"title"] && object == _webView) {
        //  self.title = _webView.title;
        if ([AssectString(self.titleStr) isEqualToString:@""]) {
            self.titleLabel.text = _webView.title;
        }
    }
    else {
        [super observeValueForKeyPath:keyPath ofObject:object change:change context:context];
    }
}

// 页面开始加载时调用
- (void)webView:(WKWebView *)webView didStartProvisionalNavigation:(WKNavigation *)navigation{
    [self showLoading:NSLocalizedString(@"加载中...", nil) allowsOpOperation:YES];
}

-(void)webView:(WKWebView *)webView didFinishNavigation:(WKNavigation *)navigation{
    [self dismissLoading];
}

- (void)webView:(WKWebView *)webView didFailNavigation:(null_unspecified WKNavigation *)navigation withError:(NSError *)error{
    [self dismissLoading];
}

-(void)zanClick{
    [self showLoading:NSLocalizedString(@"加载中...", nil) allowsOpOperation:NO];
    WeakSelf(self);
    [WebServices postFormReqUrl:NewInformationLike param:@{@"id":AssectString(self.solutionid)} loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        [weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
//                [weakself showMsg:json[@"msg"] location:centre];
                weakself.hasZan = [json[@"data"][@"new_information"][@"is_like"] boolValue];
                if ([json[@"data"][@"new_information"][@"is_like"] boolValue]) {
                    LOTAnimationView *animation = [LOTAnimationView animationNamed:@"addZan"];
                    animation.frame = CGRectMake(0,0, 44, 44);
                    [weakself.zanInnerView addSubview:animation];
                    weakself.zan_image.hidden = YES;
                    [animation playWithCompletion:^(BOOL animationFinished) {
                        [animation removeFromSuperview];
                        weakself.zan_image.hidden = NO;
                        weakself.zan_image.image = [UIImage imageNamed:@"icon_zan_home_select"];
                    }];
                    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.75 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
                        weakself.zanLabel.textColor = [UIColor colorWithRGBHex:@"#5151F0"];
                        NSString *zan = [NSString stringWithFormat:@"%ld",[json[@"data"][@"new_information"][@"point_count"] longValue]];
                        if ([json[@"data"][@"new_information"][@"point_count"] longValue] >= 10000) {
                            zan = [NSString stringWithFormat:@"%@w",[GaoJingDu chu:@[zan,@"10000"] jindu:@"2"]];
                        }
                        weakself.zanLabel.text = [NSString stringWithFormat:NSLocalizedString(@"点赞(%@)", nil),zan];
                    });
                }
            }else{
                [weakself showMsg:json[@"msg"] location:centre];
            }
        }else{
            [weakself showMsg:NSLocalizedString(@"网络异常，请稍后重试", nil) location:centre];
        }
    }];
}

- (IBAction)shareClick:(id)sender {
//    UIPasteboard *pasteboard = [UIPasteboard generalPasteboard];
//    pasteboard.string = AssectString(self.loadUrl);
//    [self showMsg:NSLocalizedString(@"复制成功", nil) location:centre];
//    WeakSelf(self);
//    [UMSocialUIManager setPreDefinePlatforms:@[@(UMSocialPlatformType_WechatTimeLine),@(UMSocialPlatformType_WechatSession)]];
//    [UMSocialUIManager showShareMenuViewInWindowWithPlatformSelectionBlock:^(UMSocialPlatformType platformType, NSDictionary *userInfo) {
//        // 根据获取的platformType确定所选平台进行下一步操作
//        [weakself shareWebPageToPlatformType:platformType];
//    }];
    
    WechatShareVC *share = [[WechatShareVC alloc] init];
    share.modalPresentationStyle = UIModalPresentationOverFullScreen;
    share.shareSubject = [RACSubject subject];
    share.type = 0;
    WeakSelf(self);
    [share.shareSubject subscribeNext:^(NSString *tagStr) {
        if ([tagStr intValue] == 10) {
            [weakself shareWebPageToPlatformType:(UMSocialPlatformType_WechatSession)];
        }else if ([tagStr intValue] == 11){
            [weakself shareWebPageToPlatformType:(UMSocialPlatformType_WechatTimeLine)];
        }else{
            UIPasteboard *pasteboard = [UIPasteboard generalPasteboard];
            pasteboard.string = AssectString(weakself.loadUrl);
            [weakself showMsg:NSLocalizedString(@"复制成功", nil) location:centre];
        }
    }];
    [self presentViewController:share animated:NO completion:^{
        
    }];
}

- (void)shareWebPageToPlatformType:(UMSocialPlatformType)platformType
{
    //创建分享消息对象
    UMSocialMessageObject *messageObject = [UMSocialMessageObject messageObject];

    //创建网页内容对象
    UIImage* thumbImage =  [self getImageWithUrl:AssectString(self.headUrl)];
    
    UMShareWebpageObject *shareObject = [UMShareWebpageObject shareObjectWithTitle:AssectString(self.titleStr) descr:AssectString(self.titleStr) thumImage:thumbImage];
    //设置网页地址
    shareObject.webpageUrl = AssectString(self.loadUrl);
    //分享消息对象设置分享内容对象
    messageObject.shareObject = shareObject;
    //调用分享接口
    [[UMSocialManager defaultManager] shareToPlatform:platformType messageObject:messageObject currentViewController:self completion:^(id data, NSError *error) {
        if (error) {
            UMSocialLogInfo(@"************Share fail with error %@*********",error);
        }else{
            if ([data isKindOfClass:[UMSocialShareResponse class]]) {
                UMSocialShareResponse *resp = data;
                //分享结果消息
                UMSocialLogInfo(@"response message is %@",resp.message);
                //第三方原始返回的数据
                UMSocialLogInfo(@"response originalResponse data is %@",resp.originalResponse);

            }else{
                UMSocialLogInfo(@"response data is %@",data);
            }
        }
    }];
}

-(UIImage *)getImageWithUrl:(NSString *)url{
    SDWebImageManager *manager = [SDWebImageManager sharedManager];
    NSString* key = [manager cacheKeyForURL:[NSURL URLWithString:url]];
    SDImageCache* cache = [SDImageCache sharedImageCache];
    //此方法会先从memory中取。
    UIImage *image = [cache imageFromDiskCacheForKey:key];
    return image;
}

@end

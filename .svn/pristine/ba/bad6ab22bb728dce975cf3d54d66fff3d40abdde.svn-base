//
//  RegisterVC.m
//  ScmProject
//
//  Created by leosun on 2019/7/16.
//  Copyright © 2019 session. All rights reserved.
//

#import "RegisterVC.h"
#import "JieyiXieyiVC.h"
#import "YCMenuView.h"

@interface RegisterVC ()

@end

@implementation RegisterVC

- (void)viewDidLoad {
    [super viewDidLoad];
    [self prepareUi];
}

-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [UIApplication sharedApplication].statusBarStyle = UIStatusBarStyleLightContent;
}

-(void)prepareUi{
    self.phoneText.attributedPlaceholder = [[NSMutableAttributedString alloc]initWithString:self.phoneText.placeholder attributes:@{NSForegroundColorAttributeName:[UIColor getColor:@"#FFFFFF" alpha:0.5]}];
    self.codeText.attributedPlaceholder = [[NSMutableAttributedString alloc]initWithString:self.codeText.placeholder attributes:@{NSForegroundColorAttributeName:[UIColor getColor:@"#FFFFFF" alpha:0.5]}];
    self.pswText.attributedPlaceholder = [[NSMutableAttributedString alloc]initWithString:self.pswText.placeholder attributes:@{NSForegroundColorAttributeName:[UIColor getColor:@"#FFFFFF" alpha:0.5]}];
    self.retryText.attributedPlaceholder = [[NSMutableAttributedString alloc]initWithString:self.retryText.placeholder attributes:@{NSForegroundColorAttributeName:[UIColor getColor:@"#FFFFFF" alpha:0.5]}];
    self.tgmText.attributedPlaceholder = [[NSMutableAttributedString alloc]initWithString:self.tgmText.placeholder attributes:@{NSForegroundColorAttributeName:[UIColor getColor:@"#FFFFFF" alpha:0.5]}];

    [self canRegister];
    
    WeakSelf(self);
    UITapGestureRecognizer *tap1 = [[UITapGestureRecognizer alloc] init];
    [[tap1 rac_gestureSignal] subscribeNext:^(id x) {
        JieyiXieyiVC *xieyi = [[JieyiXieyiVC alloc] init];
        xieyi.type = 1;
        [weakself.navigationController pushViewController:xieyi animated:YES];
    }];
    [self.xieyiLabel addGestureRecognizer:tap1];
    
    UITapGestureRecognizer *tap2 = [[UITapGestureRecognizer alloc] init];
    [[tap2 rac_gestureSignal] subscribeNext:^(id x) {
        JieyiXieyiVC *xieyi = [[JieyiXieyiVC alloc] init];
        xieyi.type = 2;
        [weakself.navigationController pushViewController:xieyi animated:YES];
    }];
    [self.zhengceLabel addGestureRecognizer:tap2];
    [self.checkBtn setImage:[[GDLocalizableController userLanguage] isEqualToString:ENGLISH]?[UIImage imageNamed:@"icon_register_eng"]:[UIImage imageNamed:@"icon_register"] forState:UIControlStateNormal];

    if ([[GDLocalizableController userLanguage] isEqualToString:ENGLISH]) {
        self.checkTop.constant = 30;
        self.btnBottom.constant = 20;
        self.xyLeading.constant = 6;
    }
}

- (IBAction)languageClick:(id)sender {
    WeakSelf(self);
    YCMenuAction *action = [YCMenuAction actionWithTitle:@"简体中文" image:nil handler:^(YCMenuAction *action) {
        [GDLocalizableController setUserlanguage:CHINESE];
        [weakself getUserLoginVC];
    }];
    YCMenuAction *action1 = [YCMenuAction actionWithTitle:@"English" image:nil handler:^(YCMenuAction *action) {
        [GDLocalizableController setUserlanguage:ENGLISH];
        [weakself getUserLoginVC];
    }];
    NSArray *actions = [NSArray arrayWithObjects:action,action1, nil];
    
    YCMenuView *view = [YCMenuView menuWithActions:actions width:140 relyonView:sender];
    [view show];
}

- (IBAction)backClick:(id)sender {
    [self.navigationController popViewControllerAnimated:YES];
}

- (IBAction)loginClick:(id)sender {
    [self.navigationController popViewControllerAnimated:YES];
}

- (IBAction)xieyiClick:(UIButton *)sender {
    self.xieyiBtn.selected = !self.xieyiBtn.selected;
    [self makeEnable:4];
}

-(void)canRegister{
    WeakSelf(self);
    [[self.phoneText rac_signalForControlEvents:(UIControlEventEditingChanged)] subscribeNext:^(id x) {
        NSString *phone = [weakself removeSpaceAndNewline:weakself.phoneText.text];
        weakself.codeBtn.enabled = ![phone isEqualToString:@""];
        weakself.codeBtn.alpha = ![phone isEqualToString:@""]?1:0.7;
        [weakself makeEnable:0];
    }];
    [[self.codeBtn rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        [weakself sendCode];
    }];
    [[self.codeText rac_signalForControlEvents:(UIControlEventEditingChanged)] subscribeNext:^(id x) {
        [weakself makeEnable:1];
    }];
    [[self.pswText rac_signalForControlEvents:(UIControlEventEditingChanged)] subscribeNext:^(id x) {
        weakself.pswText.secureTextEntry = !weakself.hideBtn.selected;
        [weakself makeEnable:2];
        [weakself pswStrength];
    }];
    [[self.retryText rac_signalForControlEvents:(UIControlEventEditingChanged)] subscribeNext:^(id x) {
        weakself.retryText.secureTextEntry = !weakself.hideBtn.selected;
        [weakself makeEnable:3];
    }];
    [[self.hideBtn rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        weakself.hideBtn.selected = !weakself.hideBtn.selected;
        weakself.pswText.secureTextEntry = !weakself.hideBtn.selected;
        weakself.retryText.secureTextEntry = !weakself.hideBtn.selected;
    }];
    [[self.checkBtn rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        [weakself checkClick];
    }];
    
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] init];
    [[tap rac_gestureSignal] subscribeNext:^(id x) {
        XWCountryCodeController *countryCode = [[XWCountryCodeController alloc] init];
        countryCode.returnCountryCodeBlock = ^(NSString *countryName, NSString *code) {
            weakself.areaLabel.text = [NSString stringWithFormat:@"＋%@",[weakself removeSpaceAndNewline:code]];
        };
        [weakself.navigationController pushViewController:countryCode animated:YES];
    }];
    [self.areaView addGestureRecognizer:tap];
    
}

//判断登录是否可以点击
-(void)makeEnable:(NSInteger)type{
    NSString *phone = [self removeSpaceAndNewline:self.phoneText.text];
    NSString *code = [self removeSpaceAndNewline:self.codeText.text];
    NSString *psw = [self removeSpaceAndNewline:self.pswText.text];
    NSString *retryPsw = [self removeSpaceAndNewline:self.retryText.text];
    switch (type) {
        case 0:
            self.phoneText.text = phone;
            break;
        case 1:
            self.codeText.text = code;
            break;
        case 2:
            self.pswText.text = psw;
            break;
        case 3:
            self.retryText.text = retryPsw;
            break;
        default:
            break;
    }
    if (![phone isEqualToString:@""] && ![code isEqualToString:@""] && ![psw isEqualToString:@""] && ![retryPsw isEqualToString:@""] && self.xieyiBtn.selected) {
        self.checkBtn.enabled = YES;
    }else{
        self.checkBtn.enabled = NO;
    }
}

-(void)pswStrength{
    NSString *psw = [self removeSpaceAndNewline:self.pswText.text];
    if ([psw isEqualToString:@""]){
        self.level1.alpha = 0.3;
        self.level2.alpha = 0.3;
        self.level3.alpha = 0.3;
        return ;
    }
    NSString *pswLevel = [NSString judgePasswordStrength:self.pswText.text];
    self.level1.alpha = 1;
    self.level2.alpha = [pswLevel intValue] >= 2?1:0.3;
    self.level3.alpha = [pswLevel intValue] >= 3?1:0.3;
}

-(void)sendCode{
    NSString *phone = [self removeSpaceAndNewline:self.phoneText.text];
    if ([phone isEqualToString:@""]) {
        [self showMsg:NSLocalizedString(@"请输入手机号", nil) location:centre];
        return;
    }
    NSString *area = [self.areaLabel.text containsString:@"＋"]?[self.areaLabel.text stringByReplacingOccurrencesOfString:@"＋" withString:@""]:self.areaLabel.text;

    NSDictionary *dict = @{@"phone":phone,@"area":AssectString(area)};
    [self showLoading:NSLocalizedString(@"加载中..", nil) allowsOpOperation:NO];
    WeakSelf(self);
    [WebServices  postFormReqUrl:verifyCode param:dict loadingTime:12 callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        [weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                [weakself countDown];
            }else{
                [weakself showMsg:json[@"msg"] location:centre];
            }
        }else{
            [weakself showMsg:NSLocalizedString(@"网络异常，请稍后重试", nil) location:centre];
        }
    }];
}

-(void)checkClick{
    NSString *phone = [self removeSpaceAndNewline:self.phoneText.text];
    NSString *code = [self removeSpaceAndNewline:self.codeText.text];
    NSString *psw = [self removeSpaceAndNewline:self.pswText.text];
    NSString *retryPsw = [self removeSpaceAndNewline:self.retryText.text];
    if (psw.length >20 || psw.length < 8) {
        [self showMsg:NSLocalizedString(@"请输入8-20位密码", nil) location:centre];
        return;
    }
    
    if (![psw isEqualToString:retryPsw]) {
        [self showMsg:NSLocalizedString(@"两次密码不一致", nil) location:centre];
        return;
    }

    NSDictionary *dict = @{@"phone":phone,@"code":code,@"area":([self.areaLabel.text containsString:@"＋"]?[self.areaLabel.text stringByReplacingOccurrencesOfString:@"＋" withString:@""]:@""),@"password":[psw md532BitUpper],@"password_confirmation":[retryPsw md532BitUpper],@"invitation_code":self.tgmText.text};
    [self showLoading:NSLocalizedString(@"加载中..", nil) allowsOpOperation:NO];
    WeakSelf(self);
    [WebServices  postFormReqUrl:userRegister param:dict loadingTime:12 callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        [weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                [weakself showMsg:json[@"msg"] location:centre];
                [weakself.navigationController popViewControllerAnimated:YES];
            }else{
                [weakself showMsg:json[@"msg"] location:centre];
            }
        }else{
            [weakself showMsg:NSLocalizedString(@"网络异常，请稍后重试", nil) location:centre];
        }
    }];
}

#pragma -mark 发送验证码
-(void)countDown{
    __block int timeout=60;//倒计时时间
    WeakSelf(self);
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    dispatch_source_t _timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0,queue);
    dispatch_source_set_timer(_timer,dispatch_walltime(NULL, 0),1.0*NSEC_PER_SEC, 0); //每秒执行
    dispatch_source_set_event_handler(_timer, ^{
        if(timeout<=0)
        { //倒计时结束，关闭
            dispatch_source_cancel(_timer);
            
            dispatch_async(dispatch_get_main_queue(), ^{
                
                //设置界面的按钮显示 根据自己需求设置
                [weakself.codeBtn setTitle:NSLocalizedString(@"重发验证码", nil) forState:UIControlStateNormal];
                weakself.codeBtn.enabled = YES;
                weakself.codeBtn.alpha = 1;
            });
        }else{
            int seconds = timeout % 100;
            NSString *strTime = [NSString stringWithFormat:@"%.2d", seconds];
            
            dispatch_async(dispatch_get_main_queue(), ^{
                //设置界面的按钮显示 根据自己需求设置
                //NSLog(@"____%@",strTime);
                [UIView beginAnimations:nil context:nil];
                [UIView setAnimationDuration:1];
                [weakself.codeBtn setTitle:[NSString stringWithFormat:@"%@s",strTime] forState:UIControlStateNormal];
                [UIView commitAnimations];
                weakself.codeBtn.enabled = NO;
                weakself.codeBtn.alpha = 0.7;
            });
            timeout--;
        }
    });
    dispatch_resume(_timer);
}

@end

//
//  LoginWithPswVC.m
//  ScmProject
//
//  Created by leosun on 2019/7/16.
//  Copyright © 2019 session. All rights reserved.
//

#import "LoginVC.h"
#import "LoginWithPhoneVC.h"
#import "RegisterVC.h"
#import "ForgetPswVC.h"
#import "AppDelegate.h"
#import "YCMenuView.h"
#import "OpeningView.h"
#import "BLStopwatch.h"

@interface LoginVC ()

@end

@implementation LoginVC

- (void)viewDidLoad {
    [super viewDidLoad];
    [self judgeIfLogin];//获取用户信息判断是否登录中
    [self prepareUi];
    self.type = 0;
    
    WeakSelf(self);
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        [weakself addOpeningView];
    });
    
    #ifdef DEBUG
        [[BLStopwatch sharedStopwatch] splitWithDescription:@"首页加载完成时间打印"];
        [[BLStopwatch sharedStopwatch] splitWithType:BLStopwatchSplitTypeContinuous description:@"启动总时间打印"];
        [[BLStopwatch sharedStopwatch] stopAndPresentResultsThenReset];;
    #else
    #endif
}

-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [UIApplication sharedApplication].statusBarStyle = UIStatusBarStyleLightContent;
}

-(void)addOpeningView{    
    OpeningView *oepnview = [[OpeningView alloc] initWithFrame:CGRectMake(0, 0, ksrcwidth, ksrcheight)];
    UIWindow*window =  [[UIApplication sharedApplication] delegate].window;
    [window addSubview:oepnview];
}

-(void)judgeIfLogin{
    NSString *accessToken = [Manager takeoutTokenkey:access_token];
    if (!accessToken || [accessToken isEqualToString:@""]) return;
    [self loginin];
}

-(void)prepareUi{
    self.phoneText.attributedPlaceholder = [[NSMutableAttributedString alloc]initWithString:self.phoneText.placeholder attributes:@{NSForegroundColorAttributeName:[UIColor getColor:@"#FFFFFF" alpha:0.5]}];
    self.pswText.attributedPlaceholder = [[NSMutableAttributedString alloc]initWithString:self.pswText.placeholder attributes:@{NSForegroundColorAttributeName:[UIColor getColor:@"#FFFFFF" alpha:0.5]}];
    WeakSelf(self);
    [[self.phoneText rac_signalForControlEvents:(UIControlEventEditingChanged)] subscribeNext:^(id x) {
        [weakself makeEnable:0];
    }];
    [[self.pswText rac_signalForControlEvents:(UIControlEventEditingChanged)] subscribeNext:^(id x) {
        if (weakself.type == 1) {
            weakself.pswText.secureTextEntry = NO;
        }else{
            weakself.pswText.secureTextEntry = !weakself.hideBtn.selected;
        }
        [weakself makeEnable:1];
    }];
    [[self.loginBtn rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        if (weakself.type == 0) {
            [weakself loginClick];
        }else{
            [weakself loginwithPhone];
        }
    }];
    [self.codeBtn setTitle:NSLocalizedString(@"获取验证码", nil) forState:UIControlStateNormal];
    [[self.codeBtn rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        [weakself sendCode];
    }];
    [[self.typeBtn rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        weakself.type = weakself.type == 0?1:0;
        [weakself makeEnable:weakself.type];
    }];
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] init];
    [[tap rac_gestureSignal] subscribeNext:^(id x) {
        XWCountryCodeController *countryCode = [[XWCountryCodeController alloc] init];
        countryCode.returnCountryCodeBlock = ^(NSString *countryName, NSString *code) {
            weakself.areaLabel.text = [NSString stringWithFormat:@"＋%@",[weakself removeSpaceAndNewline:code]];
        };
        [weakself.navigationController pushViewController:countryCode animated:YES];
    }];
    [self.areaView addGestureRecognizer:tap];
    [self.loginBtn setImage:[[GDLocalizableController userLanguage] isEqualToString:ENGLISH]?[UIImage imageNamed:@"button_login_eng"]:[UIImage imageNamed:@"button_login"] forState:UIControlStateNormal];
    if ([PlatformCode isEqualToString:@"10001"]) {
        self.titleImage.image = [UIImage imageNamed:@"title_logo_india"];
        self.widthConst.constant = 100;
    }else{
        self.titleImage.image = [[GDLocalizableController userLanguage] isEqualToString:ENGLISH]?[UIImage imageNamed:@"title_logo_eng"]:[UIImage imageNamed:@"title_logo"];
    }
}

- (IBAction)closeClick:(id)sender {
    [self dismissViewControllerAnimated:YES completion:^{
        
    }];
}

- (IBAction)phoneClick:(id)sender {
    LoginWithPhoneVC *phone = [[LoginWithPhoneVC alloc] init];
    [self.navigationController pushViewController:phone animated:YES];
}

- (IBAction)hideClick:(UIButton *)sender {
    self.hideBtn.selected = !self.hideBtn.selected;
    self.pswText.secureTextEntry = !self.hideBtn.selected;
}

- (IBAction)registerClick:(id)sender {
    RegisterVC *registerVC = [[RegisterVC alloc] init];
    [self.navigationController pushViewController:registerVC animated:YES];
}

- (IBAction)forgetClick:(id)sender {
    ForgetPswVC *forget = [[ForgetPswVC alloc] init];
    [self.navigationController pushViewController:forget animated:YES];
}

- (IBAction)languageClick:(id)sender {
    WeakSelf(self);
    YCMenuAction *action = [YCMenuAction actionWithTitle:@"简体中文" image:nil handler:^(YCMenuAction *action) {
        [GDLocalizableController setUserlanguage:CHINESE];
        [weakself getUserLoginVC];
    }];
    YCMenuAction *action1 = [YCMenuAction actionWithTitle:@"English" image:nil handler:^(YCMenuAction *action) {
        [GDLocalizableController setUserlanguage:ENGLISH];
        [weakself getUserLoginVC];
    }];
    NSArray *actions = [NSArray arrayWithObjects:action,action1, nil];
    
    YCMenuView *view = [YCMenuView menuWithActions:actions width:140 relyonView:sender];
    [view show];
}


//判断登录是否可以点击
-(void)makeEnable:(NSInteger)type{
    NSString *phone = [self removeSpaceAndNewline:self.phoneText.text];
    NSString *psw = [self removeSpaceAndNewline:self.pswText.text];
    type == 0?(self.phoneText.text = phone):(self.pswText.text = psw);
    //判断发送按钮
    if (![phone isEqualToString:@""] && self.type == 1 && ([self.codeBtn.titleLabel.text isEqualToString:NSLocalizedString(@"重发验证码",nil)] || [self.codeBtn.titleLabel.text isEqualToString:NSLocalizedString(@"获取验证码",nil)])) {
        self.codeBtn.enabled = YES;
        self.codeBtn.alpha = 1;
    }else{
        self.codeBtn.enabled = NO;
        self.codeBtn.alpha = 0.5;
    }
    if (![phone isEqualToString:@""] && ![psw isEqualToString:@""]) {
        self.loginBtn.enabled = YES;
    }else{
        self.loginBtn.enabled = NO;
    }
}

-(void)loginClick{
    NSString *phone = [self removeSpaceAndNewline:self.phoneText.text];
    NSString *psw = [self removeSpaceAndNewline:self.pswText.text];
    NSArray *datas = [NSArray arrayWithObjects:@{@"phone":phone},@{@"password":[psw md532BitUpper]},@{@"type":[phone containsString:@"@"]?@"2":@"1"}, nil];
    NSDictionary *dict = [SignGenerated signedAfterDic:datas];
//    NSDictionary *dict = @{@"phone":phone,@"password":[psw md532BitUpper],@"type":[phone containsString:@"@"]?@"2":@"1"};
    [self showLoading:NSLocalizedString(@"加载中..", nil) allowsOpOperation:NO];
    WeakSelf(self);
    [Manager clearTokenkey:access_token];//删除token
    [WebServices  postFormReqUrl:login param:dict loadingTime:12 callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                [Manager saveToken:json[@"data"][@"access_token"] key:access_token];
                [weakself getUserInfo];
            }else if ([AssectString(json[@"code"]) isEqualToString:@"2"]) {
                [weakself dismissLoading];
                [weakself getSetPassword];
            }else{
                [weakself dismissLoading];
                [weakself showMsg:json[@"msg"] location:centre];
            }
        }else{
            [weakself dismissLoading];
            [weakself showMsg:NSLocalizedString(@"网络异常，请稍后重试", nil) location:centre];
        }
    }];
}

-(void)loginwithPhone{
    NSString *phone = [self removeSpaceAndNewline:self.phoneText.text];
    NSString *code = [self removeSpaceAndNewline:self.pswText.text];
    NSString *area = [self.areaLabel.text containsString:@"＋"]?[self.areaLabel.text stringByReplacingOccurrencesOfString:@"＋" withString:@""]:self.areaLabel.text;
    NSArray *datas = [NSArray arrayWithObjects:@{@"phone":phone},@{@"code":code},@{@"type":@"3"},@{@"area":area}, nil];
    NSDictionary *dict = [SignGenerated signedAfterDic:datas];
    [self showLoading:NSLocalizedString(@"加载中..", nil) allowsOpOperation:NO];
    WeakSelf(self);
    [Manager clearTokenkey:access_token];//删除token
    [WebServices  postFormReqUrl:login param:dict loadingTime:12 callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                [Manager saveToken:json[@"data"][@"access_token"] key:access_token];
                [weakself getUserInfo];
            }else if ([AssectString(json[@"code"]) isEqualToString:@"2"]) {
                [weakself dismissLoading];
                [weakself getSetPassword];
            }else{
                [weakself dismissLoading];
                [weakself showMsg:json[@"msg"] location:centre];
            }
        }else{
            [weakself dismissLoading];
            [weakself showMsg:NSLocalizedString(@"网络异常，请稍后重试", nil) location:centre];
        }
    }];
}

-(void)getUserInfo{
    WeakSelf(self);
    [WebServices getFormReqUrl:UserInformation param:@{} loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        [weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                [Manager saveUserInfo:json];
                [weakself loginin];
            }else{
                [weakself showMsg:json[@"msg"] location:centre];
            }
        }else{
            [weakself showMsg:NSLocalizedString(@"网络异常，请稍后重试", nil) location:centre];
        }
    }];
}

-(void)sendCode{
    NSString *phone = [self removeSpaceAndNewline:self.phoneText.text];
    if ([phone isEqualToString:@""]) {
        [self showMsg:NSLocalizedString(@"请输入手机号", nil) location:centre];
        return;
    }
    
    NSString *area = [self.areaLabel.text containsString:@"＋"]?[self.areaLabel.text stringByReplacingOccurrencesOfString:@"＋" withString:@""]:self.areaLabel.text;
    NSDictionary *dict = @{@"phone":phone,@"area":AssectString(area)};
    [self showLoading:NSLocalizedString(@"加载中..", nil) allowsOpOperation:NO];
    WeakSelf(self);
    [WebServices  postFormReqUrl:loginVerifyCode param:dict loadingTime:12 callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        [weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                [weakself countDown];
            }else{
                [weakself showMsg:json[@"msg"] location:centre];
            }
        }else{
            [weakself showMsg:NSLocalizedString(@"网络异常，请稍后重试", nil) location:centre];
        }
    }];
}

-(void)getSetPassword{
    UIAlertController*   sheetVC=[UIAlertController alertControllerWithTitle:NSLocalizedString(@"暂无密码", nil) message:NSLocalizedString(@"前往设置密码", nil) preferredStyle:UIAlertControllerStyleAlert];
    
    WeakSelf(self);
    UIAlertAction*  sheetBtn1=[UIAlertAction actionWithTitle:NSLocalizedString(@"前往", nil) style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
        ForgetPswVC *forget = [[ForgetPswVC alloc] init];
        forget.type = 1;
        [weakself.navigationController pushViewController:forget animated:YES];
    }];
    
    UIAlertAction*  sheetBtn=[UIAlertAction actionWithTitle:NSLocalizedString(@"取消", nil) style:UIAlertActionStyleCancel handler:^(UIAlertAction * _Nonnull action) {
    }];
    [sheetVC addAction:sheetBtn1];
    [sheetBtn1 setValue:[UIColor colorWithRGBHex:@"#323236"] forKey:@"titleTextColor"];
    [sheetVC addAction:sheetBtn];
    [sheetBtn setValue:[UIColor colorWithRGBHex:@"#323236"] forKey:@"titleTextColor"];
    [self presentViewController:sheetVC animated:YES completion:nil];
}

#pragma -mark setter
-(void)setType:(long)type{
    _type = type;
    self.pswText.text = @"";
    if (type == 0) {
        self.typeLabel.text = NSLocalizedString(@"密码登录", nil);
        [self.typeBtn setTitle:NSLocalizedString(@"快捷登录", nil) forState:UIControlStateNormal];
        self.pswWidthConst.constant = ksrcwidth - 92;
        self.codeview.hidden = YES;
        self.hideBtn.hidden = NO;
        self.pswText.placeholder = NSLocalizedString(@"密码", nil);
        self.pswTrailConst.constant = 50;
        self.areaView.hidden = YES;
        self.phoneTextLeadConst.constant = 15;
    }else{
        self.typeLabel.text = NSLocalizedString(@"快捷登录", nil);
        [self.typeBtn setTitle:NSLocalizedString(@"密码登录", nil) forState:UIControlStateNormal];
        self.pswWidthConst.constant = 181;
        self.codeview.hidden = NO;
        self.hideBtn.hidden = YES;
        self.pswText.placeholder = NSLocalizedString(@"验证码", nil);
        self.pswTrailConst.constant = 15;
        self.areaView.hidden = NO;
        self.phoneTextLeadConst.constant = 75;
    }
}

#pragma -mark 发送验证码
-(void)countDown{
    __block int timeout=60;//倒计时时间
    WeakSelf(self);
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    dispatch_source_t _timer = dispatch_source_create(DISPATCH_SOURCE_TYPE_TIMER, 0, 0,queue);
    dispatch_source_set_timer(_timer,dispatch_walltime(NULL, 0),1.0*NSEC_PER_SEC, 0); //每秒执行
    dispatch_source_set_event_handler(_timer, ^{
        if(timeout<=0)
        { //倒计时结束，关闭
            dispatch_source_cancel(_timer);
            
            dispatch_async(dispatch_get_main_queue(), ^{
                
                //设置界面的按钮显示 根据自己需求设置
                [weakself.codeBtn setTitle:NSLocalizedString(@"重发验证码", nil) forState:UIControlStateNormal];
                weakself.codeBtn.alpha = 1;
                weakself.codeBtn.enabled = YES;
            });
        }else{
            int seconds = timeout % 100;
            NSString *strTime = [NSString stringWithFormat:@"%.2d", seconds];
            
            dispatch_async(dispatch_get_main_queue(), ^{
                //设置界面的按钮显示 根据自己需求设置
                //NSLog(@"____%@",strTime);
                [UIView beginAnimations:nil context:nil];
                [UIView setAnimationDuration:1];
                [weakself.codeBtn setTitle:[NSString stringWithFormat:@"%@s",strTime] forState:UIControlStateNormal];
                weakself.codeBtn.alpha = 0.5;
                [UIView commitAnimations];
                weakself.codeBtn.enabled = NO;
            });
            timeout--;
        }
    });
    dispatch_resume(_timer);
}
@end

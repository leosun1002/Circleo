//
//  BrowserPayDetailServiceVC.m
//  ScmProject
//
//  Created by leosun on 2019/12/23.
//  Copyright © 2019 session. All rights reserved.
//

#import "DSPublishServiceVC.h"
#import "DNSFilterSelectVC.h"
#import "DSPublishServiceTypeVC.h"
#import "CHSwitch.h"

@interface DSPublishServiceVC ()

@property(nonatomic,weak)CHSwitch *topchSwith;
//最少输入的字数
@property(nonatomic,strong)NSString *word_count;
@property(nonatomic,strong)NSMutableArray *datas;

@end

@implementation DSPublishServiceVC

- (void)viewDidLoad {
    [super viewDidLoad];
    [self prepareUi];
    [self addRightBtn];
    [self setData];
}

-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [self getWordCount];
}

-(void)viewDidDisappear:(BOOL)animated{
    [super viewDidDisappear:animated];
    [self dismissLoading];
}

-(void)prepareUi{
    [self setBanar:NSLocalizedString(@"服务项", nil) hiddeBack:NO];
    self.topConst.constant += navBarHeight;
    
    CHSwitch *topchSwith = [[CHSwitch alloc] initWithFrame:CGRectMake(ksrcwidth - 60, 7.5, 45, 45)];
    topchSwith.tintColor = [UIColor colorWithRGBHex:@"#EEEEF0"];
    topchSwith.onTintColor = [UIColor colorWithRGBHex:@"#5151F0"];
    topchSwith.shadow = NO;
    topchSwith.on = self.is_sticky == 1;
    topchSwith.tag = 11;
    [topchSwith addTarget:self action:@selector(changeState:) forControlEvents:(UIControlEventValueChanged)];
    [self.topView addSubview:_topchSwith = topchSwith];
    self.daysView.hidden = self.is_sticky == 0;
    self.daysLabel.text = [AssectString(self.sticky_configuration_string) isEqualToString:@""]?NSLocalizedString(@"请选择", nil):AssectString(self.sticky_configuration_string);
    
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] init];
    WeakSelf(self);
    [[tap rac_gestureSignal] subscribeNext:^(id x) {
        [weakself selectDays];
    }];
    [self.daysView addGestureRecognizer:tap];
    
    UITapGestureRecognizer *tap1 = [[UITapGestureRecognizer alloc] init];
    [[tap1 rac_gestureSignal] subscribeNext:^(id x) {
        DSPublishServiceTypeVC *type = [[DSPublishServiceTypeVC alloc] init];
        type.modalPresentationStyle = UIModalPresentationOverCurrentContext;
        type.serviceType = weakself.serviceType;
        type.serviceSubject = [RACSubject subject];
        [type.serviceSubject subscribeNext:^(NSString *service) {
            weakself.serviceType = [service intValue];
            [weakself setData];
        }];
        [weakself presentViewController:type animated:NO completion:^{
            
        }];
    }];
    [self.typeView addGestureRecognizer:tap1];
    
    self.countText.text = [AssectString(self.free_word_count) isEqualToString:@""]?@"100":AssectString(self.free_word_count);
    self.countText.attributedPlaceholder = [[NSMutableAttributedString alloc]initWithString:self.countText.placeholder attributes:@{NSForegroundColorAttributeName:[UIColor colorWithRGBHex:@"#AAAAB5"],NSFontAttributeName:[UIFont systemFontOfSize:12]}];
    self.countText.rightViewMode = UITextFieldViewModeAlways;
    self.countText.rightView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 10, 35)];
    [[self.countText rac_signalForControlEvents:(UIControlEventEditingChanged)] subscribeNext:^(id x) {
        weakself.countText.text = [weakself.countText PreciseFigures:0];
    }];
    self.moneyText.text = AssectString(self.charge_amount);
    self.moneyText.attributedPlaceholder = [[NSMutableAttributedString alloc]initWithString:self.moneyText.placeholder attributes:@{NSForegroundColorAttributeName:[UIColor colorWithRGBHex:@"#AAAAB5"],NSFontAttributeName:[UIFont systemFontOfSize:12]}];
    self.moneyText.rightViewMode = UITextFieldViewModeAlways;
    self.moneyText.rightView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 10, 35)];
    [[self.moneyText rac_signalForControlEvents:(UIControlEventEditingChanged)] subscribeNext:^(id x) {
        weakself.moneyText.text = [weakself.moneyText PreciseFigures:2];
    }];
}

-(void)getWordCount{
    WeakSelf(self);
    [self showLoading:NSLocalizedString(@"加载中...", nil) allowsOpOperation:NO];
    [WebServices getFormReqUrl:DomainPaymentFee param:@{} loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                weakself.word_count = AssectString(json[@"data"][@"article_chain_free_count"]);
                weakself.percentLabel.text = [NSString stringWithFormat:NSLocalizedString(@"平台抽成比例：%@%%", nil),[GaoJingDu cheng:@[AssectNumber(json[@"data"][@"article_handling_fees"]),@"100"] jindu:@"2"]];
                [weakself getDaysData];
            }else{
                [weakself dismissLoading];
                [weakself showErrorView:weakself.view withBlock:^{
                    [weakself getWordCount];
                }];
            }
        }else{
            [weakself dismissLoading];
            [weakself showErrorView:weakself.view withBlock:^{
                [weakself getWordCount];
            }];
        }
    }];
}

-(void)setData{
    if (self.serviceType == 0) {
        self.typeLabel.text = NSLocalizedString(@"免费文章", nil);
        self.payView.hidden = YES;
        self.payHeight.constant = 0;
        self.topView.hidden = NO;
        self.daysView.hidden = !self.topchSwith.on;
    }else if (self.serviceType == 1){
        self.typeLabel.text = NSLocalizedString(@"付费文章", nil);
        self.payView.hidden = NO;
        self.payHeight.constant = 120;
        self.topView.hidden = NO;
        self.daysView.hidden = !self.topchSwith.on;
    }else if (self.serviceType == 2){
        self.typeLabel.text = NSLocalizedString(@"私密文章", nil);
        self.payView.hidden = YES;
        self.topView.hidden = YES;
        self.daysView.hidden = YES;
    }
}

-(void)addRightBtn{
    UIView *bar = [self gerNavBar];
    CGFloat width = [[GDLocalizableController userLanguage] isEqualToString:ENGLISH]?80:60;
    UIView *view = [[UIView alloc] initWithFrame:CGRectMake(ksrcwidth - width - 5,navBarHeight - 35, width, 20)];
    [bar addSubview:view];
    
    UIButton *rightBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    rightBtn.frame = CGRectMake(0, 0, width, 20);
    [rightBtn setTitle:NSLocalizedString(@"确定", nil) forState:UIControlStateNormal];
    [rightBtn setTitleColor:[UIColor colorWithRGBHex:@"#5151F0"] forState:UIControlStateNormal];
    rightBtn.titleLabel.font = [UIFont boldSystemFontOfSize:14.f];
    rightBtn.titleLabel.textAlignment = NSTextAlignmentRight;
    WeakSelf(self);
    [[rightBtn rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        [weakself checkClick];
    }];
    [view addSubview:rightBtn];
}

-(void)changeState:(UISwitch *)sender{
    if (sender.tag == 11) {
        BOOL state = sender.on;
        self.daysView.hidden = !state;
    }
}

-(void)getDaysData{
    WeakSelf(self);
//    [weakself showLoading:@"" allowsOpOperation:NO];
    [WebServices getFormReqUrl:BrowserSticky param:@{} loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        [weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                [weakself.datas addObjectsFromArray:json[@"data"][@"data"]];
                if (![AssectString(weakself.sticky_configuration_string) isEqualToString:@""]) {
                    weakself.daysLabel.text = [AssectString(weakself.sticky_configuration_string) isEqualToString:@""]?NSLocalizedString(@"请选择", nil):AssectString(weakself.sticky_configuration_string);
                }else{
                    if (weakself.datas.count != 0) {
                        NSDictionary *dict = weakself.datas[0];
                        weakself.sticky_configuration_id = [NSString stringWithFormat:@"%lld",[dict[@"id"] longLongValue]];
                        weakself.daysLabel.text = [NSString stringWithFormat:NSLocalizedString(@"%ld天(%@ CNY)", nil),[dict[@"day"] longLongValue],AssectString(dict[@"price"])];
                    }
                }
            }else{
                [weakself showErrorView:weakself.view withBlock:^{
                    [weakself getDaysData];
                }];
            }
        }else{
            [weakself showErrorView:weakself.view withBlock:^{
                [weakself getDaysData];
            }];
        }
    }];
}

-(void)selectDays{
    DNSFilterSelectVC *select = [[DNSFilterSelectVC alloc] init];
    select.dataType = 2;
    select.datas = [self.datas copy];
    select.selectStr = AssectString(self.sticky_configuration_id);
    select.modalPresentationStyle = UIModalPresentationOverCurrentContext;
    select.subject = [RACSubject subject];
    WeakSelf(self);
    [select.subject subscribeNext:^(NSDictionary *dict) {
        weakself.sticky_configuration_id = [NSString stringWithFormat:@"%lld",[dict[@"id"] longLongValue]];
        weakself.daysLabel.text = [NSString stringWithFormat:NSLocalizedString(@"%ld天(%@ CNY)", nil),[dict[@"day"] longLongValue],AssectString(dict[@"price"])];
    }];
    [self presentViewController:select animated:NO completion:nil];
}

-(void)checkClick{
    if (self.serviceType == 0) {
        if ([AssectString(self.sticky_configuration_id) isEqualToString:@""] && self.topchSwith.on) {
            [self showMsg:NSLocalizedString(@"请选择置顶天数", nil) location:centre];
            return;
        }
        NSDictionary *dict = @{@"serviceType":@"0",@"selectDay":self.topchSwith.on?AssectString(self.daysLabel.text):@"",@"selectDayId":self.topchSwith.on?AssectString(self.sticky_configuration_id):@"",@"top":self.topchSwith.on?@"1":@"0"};
        [self.subject sendNext:dict];
        [self.navigationController popViewControllerAnimated:YES];
        return;
    }
    
    if (self.serviceType == 1) {
        if ([AssectString(self.sticky_configuration_id) isEqualToString:@""] && self.topchSwith.on) {
            [self showMsg:NSLocalizedString(@"请选择置顶天数", nil) location:centre];
            return;
        }
        NSString *count = self.countText.text;
        if ([count isEqualToString:@""]) {
            [self showMsg:NSLocalizedString(@"请输入免费字数", nil) location:centre];
            return;
        }
        if ([count intValue] < [self.word_count intValue]) {
            [self showMsg:[NSString stringWithFormat:NSLocalizedString(@"最少输入%@个免费字数", nil),AssectString(self.word_count)] location:centre];
            return;
        }
        if ([count intValue] >= self.content_count) {
            [self showMsg:NSLocalizedString(@"当前字数不满足付费要求", nil) location:centre];
            return;
        }
        NSString *money = self.moneyText.text;
        if ([money isEqualToString:@""] || [money doubleValue] <= 0) {
            [self showMsg:NSLocalizedString(@"请输入免费金额", nil) location:centre];
            return;
        }
        NSDictionary *dict = @{@"serviceType":@"1",@"selectDay":self.topchSwith.on?AssectString(self.daysLabel.text):@"",@"selectDayId":self.topchSwith.on?AssectString(self.sticky_configuration_id):@"",@"top":self.topchSwith.on?@"1":@"0",@"count":AssectString(count),@"money":AssectString(money)};
        [self.subject sendNext:dict];
        [self.navigationController popViewControllerAnimated:YES];
        return;
    }
    
    if (self.serviceType == 2) {
        NSDictionary *dict = @{@"serviceType":@"2"};
        [self.subject sendNext:dict];
        [self.navigationController popViewControllerAnimated:YES];
        return;
    }
}

#pragma -mark getter
-(NSMutableArray *)datas{
    if (!_datas) {
        _datas = [NSMutableArray array];
    }
    return _datas;
}
@end

//
//  PersonUSDTPullVC.m
//  ScmProject
//
//  Created by leosun on 2019/7/24.
//  Copyright © 2019 session. All rights reserved.
//

#import "PersonUSDTPullVC.h"
#import "ScanViewController.h"
#import "ScanViewController.h"
#import "TransPswInputVC.h"
#import "PayResultVC.h"
#import "AddressManageVC.h"
#import "CurrencyModel.h"
#import "DNSCoinSelectVC.h"
#import "AssetCoinListVC.h"
#import "PersonAssetsVC.h"

@interface PersonUSDTPullVC ()<UITextViewDelegate>

@property(nonatomic,strong)NSString *usdtYe;
@property(nonatomic,strong)NSString *minWithdraw;
@property(nonatomic,strong)NSString *maxWithdraw;
@property(nonatomic,strong)NSString *address;

@end

@implementation PersonUSDTPullVC

- (void)viewDidLoad {
    [super viewDidLoad];
    if (self.type == 0) {
        [self setBanar:NSLocalizedString(@"USDT 提币", nil) hiddeBack:NO];
        self.typeHeightConst.constant = 77;
        self.chainView.hidden = NO;
    }else{
        [self setBanar:[NSString stringWithFormat:NSLocalizedString(@"%@ 提币", nil),AssectString(self.currencyName)] hiddeBack:NO];
        self.typeHeightConst.constant = 0;
        self.chainView.hidden = YES;
    }
    [self prepareUi];
    [self loadNetData];
}

-(void)viewDidDisappear:(BOOL)animated{
    [super viewDidDisappear:animated];
    [self dismissLoading];
}

-(void)prepareUi{
    self.topConst.constant = navBarHeight;
    self.backview.layer.shadowColor = [UIColor colorWithRGBHex:@"#1F1F4D"].CGColor;//阴影颜色
    self.backview.layer.shadowOffset = CGSizeMake(2, 2);//偏移距离
    self.backview.layer.shadowOpacity = 0.1;//不透明度
    self.backview.layer.shadowRadius = 5;//半径
        
    WeakSelf(self);
    [[self.countText rac_signalForControlEvents:(UIControlEventEditingChanged)] subscribeNext:^(id x) {
        NSString *pull = [weakself.countText PreciseFigures:2];
        weakself.countText.text = pull;
        [weakself calculateCount];
        [weakself makeBtnEnable];
    }];
    if(@available(iOS 13.0, *)){
        self.countText.attributedPlaceholder = [[NSMutableAttributedString alloc]initWithString:self.countText.placeholder attributes:@{NSForegroundColorAttributeName:[UIColor colorWithRGBHex:@"#9999A3"],NSFontAttributeName:[UIFont systemFontOfSize:12]}];
    }else{
        [self.countText setValue:[UIColor colorWithRGBHex:@"#9999A3"] forKeyPath:@"_placeholderLabel.textColor"];
        [self.countText setValue:[UIFont systemFontOfSize:12] forKeyPath:@"_placeholderLabel.font"];
    }

    [[self.checkBtn rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        TransPswInputVC *psw = [[TransPswInputVC alloc] init];
        psw.modalPresentationStyle = UIModalPresentationOverCurrentContext;
        psw.subject = [RACSubject subject];
        [psw.subject subscribeNext:^(NSString *psw) {
            if (weakself.type == 0) {
                [weakself checkClick:psw];
            }else{
                [weakself checkCoinClick:psw];
            }
        }];
        [weakself presentViewController:psw animated:NO completion:^{
            
        }];
    }];
    
    if (self.type == 0) {
        [self setData];
    }
    
    [[self.addressText rac_signalForControlEvents:(UIControlEventEditingDidBegin)] subscribeNext:^(id x) {
        weakself.address = @"";
        [weakself makeBtnEnable];
    }];
    
    [[self.omiBtn rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        if (weakself.chainType == 0) return ;
        weakself.chainType = 0;
    }];
    
    [[self.ercBtn rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        if (weakself.chainType == 1) return ;
        weakself.chainType = 1;
    }];
    
    [[self.addressText rac_signalForControlEvents:(UIControlEventEditingDidEnd)] subscribeNext:^(id x) {
        [weakself getAddressWithDomain:weakself.chainType];
    }];
    
    self.chainType = 0;
    self.addressType = 0;
}

-(void)loadNetData{
    if (self.type == 0) {
        [self getUserInfo];
        [self getData];
    }else{
        [self getCoinInfo];
    }
}

-(void)getUserInfo{
    WeakSelf(self);
    [WebServices getFormReqUrl:UserInformation param:@{} loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                [Manager saveUserInfo:json];
                [weakself setData];
            }
        }
    }];
}

-(void)setData{
    NSDictionary *userDict = [Manager takeoutUserTokenkey:JYLoginuser];
    self.usdtYe = AssectNumber(userDict[JYUsdtMoney]);
    NSString *placeholder = [NSString stringWithFormat:NSLocalizedString(@"当前可提 %@", nil),self.usdtYe];
    self.countText.placeholder = placeholder;
    
    self.selectTipLabel.text = NSLocalizedString(@"当前币种", nil);
    self.homeV.hidden = YES;
    self.nameLabel.text = @"USDT";
    self.coinV.image = [UIImage imageNamed:@"icon_usdt"];
    self.nameTrail.constant = 10;
    
    self.numberTipLabel.text = [NSString stringWithFormat:NSLocalizedString(@"提币数量(%@)", nil),@"USDT"];
    self.feeTipLabel.text = [NSString stringWithFormat:NSLocalizedString(@"手续费(%@)", nil),@"USDT"];
    self.dzipLabel.text = [NSString stringWithFormat:NSLocalizedString(@"到账数量(%@)", nil),@"USDT"];
}

-(void)getData{
    WeakSelf(self);
    [self showLoading:NSLocalizedString(@"加载中..", nil) allowsOpOperation:NO];
    [WebServices getFormReqUrl:DomainPaymentFee param:@{} loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        [weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                weakself.sxfText.text = AssectNumber(json[@"data"][@"usdt_payment_fee"]);
                weakself.minWithdraw = AssectNumber(json[@"data"][@"usdt_minimum_withdrawal"]);
                weakself.maxWithdraw = AssectNumber(json[@"data"][@"usdt_highest_withdrawal"]);
                NSString *tipStr = [NSString stringWithFormat:NSLocalizedString(@"注：当前提币地址为 %@,手续费为%@%@，最低提现金额%@%@，最高为%@%@额度。预计1-2个工作日到账！", nil),weakself.chainType == 0?@"USDT_OMNI":@"USDT_ERC20",AssectString(weakself.sxfText.text),@"USDT",AssectString(weakself.minWithdraw),@"USDT",weakself.maxWithdraw,@"USDT"];
                weakself.tipLabel.text = tipStr;
            }else{
                [weakself showErrorView:weakself.view withBlock:^{
                    [weakself getData];
                }];
            }
        }else{
            [weakself showErrorView:weakself.view withBlock:^{
                [weakself getData];
            }];
        }
    }];
}

-(void)getCoinInfo{
    WeakSelf(self);
    [self showLoading:NSLocalizedString(@"加载中...", nil) allowsOpOperation:NO];
    [WebServices postFormReqUrl:CurrencyDetail param:@{@"id":[NSString stringWithFormat:@"%ld",self.currencyId]} loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        [weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                CurrencyModel *model = [CurrencyModel mj_objectWithKeyValues:json[@"data"][@"currency"]];
                [weakself setDataWithModel:model];
            }else{
                [weakself showErrorView:weakself.view withBlock:^{
                    [weakself getCoinInfo];
                }];
            }
        }else{
            [weakself showErrorView:weakself.view withBlock:^{
                [weakself getCoinInfo];
            }];
        }
    }];
}

//根据域名获取地址
-(void)getAddressWithDomain:(long)chainType{
    WeakSelf(self);
    NSString *address = AssectString(self.addressText.text);
    if (![address containsString:@"."]) {
        self.address = address;
        self.addressType = 0;
        return;
    }
    NSString *suffix = @"";
    if (self.type == 0) {
        suffix = chainType == 0?@"btc":@"eth";
    }else{
        suffix = [AssectString(self.nameLabel.text) lowercaseString];
    }
    NSDictionary *dict = @{@"name":[NSString stringWithFormat:@"%@.%@",address,AssectString(suffix)]};
    [self showLoading:@"" allowsOpOperation:NO];
    [WebServices postFormReqUrl:CurrencySearchDNS param:dict loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        [weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                weakself.address = AssectString(json[@"data"][@"address"]);
            }else{
                weakself.address = NSLocalizedString(@"域名解析失败，请再次输入", nil);
            }
        }else{
            weakself.address = NSLocalizedString(@"域名解析失败，请再次输入", nil);
        }
        weakself.addressType = 1;
    }];
}

-(void)setDataWithModel:(CurrencyModel *)model{
    self.usdtYe = AssectNumber(model.pivot.number);
    NSString *placeholder = [NSString stringWithFormat:NSLocalizedString(@"当前可提 %@", nil),self.usdtYe];
    self.countText.placeholder = placeholder;
    
    self.selectTipLabel.text = NSLocalizedString(@"选择币种", nil);
    self.homeV.hidden = NO;
    self.nameLabel.text = model.name;
    [self.coinV sd_setImageWithURL:[NSURL URLWithString:AssectString(model.images)] placeholderImage:[UIColor createColorImg:@"#f7f7f9"]];
    self.nameTrail.constant = 25;

    self.sxfText.text = AssectString(model.handling_fee);
    self.minWithdraw = AssectString(model.minimum_withdrawal);
    self.maxWithdraw = AssectString(model.cash_withdrawal);
    NSString *tipStr = [NSString stringWithFormat:NSLocalizedString(@"注：当前提币地址为 %@,手续费为%@%@，最低提现金额%@%@，最高为%@%@额度。预计1-2个工作日到账！", nil),AssectString(model.name),AssectString(model.handling_fee),AssectString(model.name),self.minWithdraw,AssectString(model.name),self.maxWithdraw,AssectString(model.name)];
    self.tipLabel.text = tipStr;

    self.numberTipLabel.text = [NSString stringWithFormat:NSLocalizedString(@"提币数量(%@)", nil),AssectString(model.name)];
    self.feeTipLabel.text = [NSString stringWithFormat:NSLocalizedString(@"手续费(%@)", nil),AssectString(model.name)];
    self.dzipLabel.text = [NSString stringWithFormat:NSLocalizedString(@"到账数量(%@)", nil),AssectString(model.name)];

    WeakSelf(self);
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] init];
    [[tap rac_gestureSignal] subscribeNext:^(id x) {
        DNSCoinSelectVC *select = [[DNSCoinSelectVC alloc] init];
        select.type = 1;
        select.subject = [RACSubject subject];
        [select.subject subscribeNext:^(NSString *currencyStr) {
            weakself.currencyId = [currencyStr longLongValue];
            [weakself getCoinInfo];
        }];
        [weakself.navigationController pushViewController:select animated:YES];
    }];
    [self.backview addGestureRecognizer:tap];
}

- (IBAction)saoClick:(id)sender {
    ScanViewController *scan = [[ScanViewController alloc] init];
    scan.modalPresentationStyle = UIModalPresentationFullScreen;
    WeakSelf(self);
    scan.scanBlock = ^(NSString *scanData) {
        weakself.addressText.text = scanData;
        weakself.address = @"";
        [weakself makeBtnEnable];
        [weakself getAddressWithDomain:weakself.chainType];
    };
    [self presentViewController:scan animated:YES completion:^{
    }];
}

- (IBAction)addressClick:(id)sender {
    AddressManageVC *adrress = [[AddressManageVC alloc] init];
    adrress.subject = [RACSubject subject];
    adrress.currencyName = self.type == 0?@"USDT":AssectString(self.currencyName);
    WeakSelf(self);
    [adrress.subject subscribeNext:^(NSString *address) {
        weakself.addressText.text = address;
        weakself.address = @"";
        [weakself makeBtnEnable];
        [weakself getAddressWithDomain:weakself.chainType];
    }];
    [self.navigationController pushViewController:adrress animated:YES];
}

- (IBAction)allClick:(id)sender {
    self.countText.text = self.usdtYe;
    [self calculateCount];
    [self makeBtnEnable];
}

-(void)calculateCount{
    NSString *pull = AssectNumber(self.countText.text);
    NSString *sxf = AssectNumber(self.sxfText.text);
    if ([pull doubleValue] <= [sxf doubleValue]) {
        self.dzText.text = @"0.00";
        return;
    }
    self.dzText.text = [GaoJingDu jian:@[pull,sxf] jindu:@"2"];
}

-(void)makeBtnEnable{
    NSString *dz = self.dzText.text;
    if ([dz doubleValue] > 0 && ![AssectString(self.address) isEqualToString:@""] && ![AssectString(self.address) isEqualToString:NSLocalizedString(@"域名解析失败，请再次输入", nil)]) {
        self.checkBtn.enabled = YES;
        self.checkBtn.alpha = 1.f;
    }else{
        self.checkBtn.enabled = NO;
        self.checkBtn.alpha = 0.7;
    }
}

-(void)checkClick:(NSString *)psw{
    NSString *pull = AssectNumber(self.countText.text);
    NSString *sxf = AssectNumber(self.sxfText.text);
    NSString *dz = AssectNumber(self.dzText.text);
    NSString *address = AssectNumber(self.address);
    if ([address isEqualToString:@""] || [AssectString(self.address) isEqualToString:NSLocalizedString(@"域名解析失败，请再次输入", nil)]) return;

    if ([pull doubleValue] < [self.minWithdraw doubleValue]) {
        [self showMsg:[NSString stringWithFormat:NSLocalizedString(@"最低提币数量为%@", nil),self.minWithdraw] location:centre];
        return;
    }
    
    if ([pull doubleValue] > [self.maxWithdraw doubleValue]) {
        [self showMsg:[NSString stringWithFormat:NSLocalizedString(@"最高提币数量为%@", nil),self.maxWithdraw] location:centre];
        return;
    }
    NSArray *datas = [NSArray arrayWithObjects:@{@"withdrawal_money":pull},@{@"payment_fee":sxf},@{@"actual_money":dz},@{@"remark":self.markText.text},@{@"type":@"1"},@{@"pay_password":[psw md532BitUpper]},@{@"receiving_address":address},@{@"public_chain_type":[NSString stringWithFormat:@"%ld",self.chainType + 1]}, nil];
    NSDictionary *dict = [SignGenerated signedAfterDic:datas];
    [self showLoading:NSLocalizedString(@"加载中..", nil) allowsOpOperation:NO];
    WeakSelf(self);
    [WebServices postFormReqUrl:WithdrawalUSDT param:dict loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        [weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                PayResultVC *result = [[PayResultVC alloc] init];
                result.type = 1;
                result.modalPresentationStyle = UIModalPresentationFullScreen;
                result.subject = [RACSubject subject];
                [result.subject subscribeNext:^(id x) {
                    [weakself popUSDTToVC:@"PersonAssetsVC"];
                }];
                [weakself presentViewController:result animated:YES completion:^{
                    
                }];
            }else{
                [weakself showMsg:json[@"msg"] location:centre];
            }
        }else{
            [weakself showMsg:NSLocalizedString(@"网络异常，请稍后重试", nil) location:centre];
        }
    }];
}

-(void)checkCoinClick:(NSString *)psw{
    NSString *pull = AssectNumber(self.countText.text);
    NSString *sxf = AssectNumber(self.sxfText.text);
    NSString *dz = AssectNumber(self.dzText.text);
    NSString *address = AssectNumber(self.address);
    if ([address isEqualToString:@""] || [AssectString(self.address) isEqualToString:NSLocalizedString(@"域名解析失败，请再次输入", nil)]) return;

    if ([pull doubleValue] < [self.minWithdraw doubleValue]) {
        [self showMsg:[NSString stringWithFormat:NSLocalizedString(@"最低提币数量为%@", nil),self.minWithdraw] location:centre];
        return;
    }
    
    if ([pull doubleValue] > [self.maxWithdraw doubleValue]) {
        [self showMsg:[NSString stringWithFormat:NSLocalizedString(@"最高提币数量为%@", nil),self.maxWithdraw] location:centre];
        return;
    }
    NSArray *datas = [NSArray arrayWithObjects:@{@"id":[NSString stringWithFormat:@"%ld",self.currencyId]},@{@"address":address},@{@"price":pull},@{@"handling_fee":sxf},@{@"actual_price":AssectString(dz)},@{@"remark":self.markText.text},@{@"pay_password":[psw md532BitUpper]}, nil];
    NSDictionary *dict = [SignGenerated signedAfterDic:datas];
    [self showLoading:NSLocalizedString(@"加载中..", nil) allowsOpOperation:NO];
    WeakSelf(self);
    [WebServices postFormReqUrl:CurrencyCoinPull param:dict loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        [weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                PayResultVC *result = [[PayResultVC alloc] init];
                result.type = 1;
                result.modalPresentationStyle = UIModalPresentationFullScreen;
                result.subject = [RACSubject subject];
                [result.subject subscribeNext:^(id x) {
                    [weakself popToVC:@"AssetCoinListVC"];
                }];
                [weakself presentViewController:result animated:YES completion:^{
                    
                }];
            }else{
                [weakself showMsg:json[@"msg"] location:centre];
            }
        }else{
            [weakself showMsg:NSLocalizedString(@"网络异常，请稍后重试", nil) location:centre];
        }
    }];
}

#pragma -mark UITextViewDelegate
-(void)textViewDidChange:(UITextView *)textView{
    self.markLabel.hidden = textView.text.length != 0;
}

#pragma -mark setter
-(void)setChainType:(long)chainType{
    if (_chainType != chainType) {
        self.address = @"";
        [self makeBtnEnable];
        [self getAddressWithDomain:chainType];
    }
    if (chainType == 0) {
        self.omiBtn.backgroundColor = [UIColor whiteColor];
        [self.omiBtn setTitleColor:[UIColor colorWithRGBHex:@"#5151F0"] forState:UIControlStateNormal];
        self.omiBtn.layer.borderColor = [UIColor colorWithRGBHex:@"#5151F0"].CGColor;
        self.omiBtn.layer.borderWidth = 1.f;
        
        self.ercBtn.backgroundColor = [UIColor colorWithRGBHex:@"#F7F7F9"];
        [self.ercBtn setTitleColor:[UIColor colorWithRGBHex:@"#9999A3"] forState:UIControlStateNormal];
        self.ercBtn.layer.borderColor = [UIColor colorWithRGBHex:@"#F7F7F9"].CGColor;
        self.ercBtn.layer.borderWidth = 1.f;
    }else{
        self.ercBtn.backgroundColor = [UIColor whiteColor];
        [self.ercBtn setTitleColor:[UIColor colorWithRGBHex:@"#5151F0"] forState:UIControlStateNormal];
        self.ercBtn.layer.borderColor = [UIColor colorWithRGBHex:@"#5151F0"].CGColor;
        self.ercBtn.layer.borderWidth = 1.f;
        
        self.omiBtn.backgroundColor = [UIColor colorWithRGBHex:@"#F7F7F9"];
        [self.omiBtn setTitleColor:[UIColor colorWithRGBHex:@"#9999A3"] forState:UIControlStateNormal];
        self.omiBtn.layer.borderColor = [UIColor colorWithRGBHex:@"#F7F7F9"].CGColor;
        self.omiBtn.layer.borderWidth = 1.f;
    }
    _chainType = chainType;
    
    NSString *tipStr = [NSString stringWithFormat:NSLocalizedString(@"注：当前提币地址为 %@,手续费为%@%@，最低提现金额%@%@，最高为%@%@额度。预计1-2个工作日到账！", nil),chainType == 0?@"USDT_OMNI":@"USDT_ERC20",AssectString(self.sxfText.text),@"USDT",AssectString(self.minWithdraw),@"USDT",self.maxWithdraw,@"USDT"];
    self.tipLabel.text = tipStr;

}

-(void)setAddressType:(long)addressType{
    _addressType = addressType;
    if (_addressType == 0) {
        self.addressHeight.constant = 90;
        self.addressInputView.hidden = YES;
        self.addressInputHeight.constant = 0;
    }else{
        self.addressHeight.constant = 120;
        self.addressInputView.hidden = NO;
        self.addressInputHeight.constant = 40;
        self.addressLabel.text = [AssectString(self.address) isEqualToString:@""]?NSLocalizedString(@"暂无提币地址", nil):AssectString(self.address);
        self.addressLabel.textColor = [AssectString(self.address) isEqualToString:@""] || [AssectString(self.address) isEqualToString:NSLocalizedString(@"域名解析失败，请再次输入", nil)]?[UIColor colorWithRGBHex:@"#F95947"]:[UIColor colorWithRGBHex:@"#73A830"];
    }
    [self makeBtnEnable];
}

-(void)popToVC:(NSString* )vcStr{
    for (UIViewController *controller in self.navigationController.viewControllers) {
        if([controller isKindOfClass:NSClassFromString(vcStr)]){
            AssetCoinListVC *coinList = (AssetCoinListVC *)controller;
            [self.navigationController popToViewController:coinList animated:NO];
            [coinList refreshFromOtherPage];
            break;
        }
    }
}

-(void)popUSDTToVC:(NSString* )vcStr{
    for (UIViewController *controller in self.navigationController.viewControllers) {
        if([controller isKindOfClass:NSClassFromString(vcStr)]){
            PersonAssetsVC *asset = (PersonAssetsVC *)controller;
            [self.navigationController popToViewController:asset animated:NO];
            [asset refreshFromOtherPage];
            break;
        }
    }
}
@end

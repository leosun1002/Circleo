//
//  HomePageHeader.m
//  ScmProject
//
//  Created by leosun on 2019/9/21.
//  Copyright © 2019 session. All rights reserved.
//

#import "HomePageHeader.h"
#import "DNSHomeRollCell.h"
#import "DNSBannerModel.h"
#import "JhPageControl.h"
#import "JieyiXieyiVC.h"
#import "InviteFriendVC.h"
#import "SolutionModel.h"
#import "ProductInformationVC.h"
#import "JYShortMassageVC.h"
#import "NewsWebViewController.h"

@interface HomePageHeader ()<SDCycleScrollViewDelegate,WSLRollViewDelegate,UUMarqueeViewDelegate>

@property (nonatomic, strong) JhPageControl *pageControl;

@end

@implementation HomePageHeader

-(instancetype)initWithFrame:(CGRect)frame{
    self=[[[NSBundle mainBundle] loadNibNamed:@"HomePageHeader" owner:self options:nil] lastObject];
    if ([super initWithFrame:frame]) {
        self.frame=frame;
        [self prepareUi];
    }
    return self;
}

-(void)prepareUi{
    [self addScrollview];
    [self addWSLScrollView];
    [self addWSRScrollView];
    [self addProductView];
    
    WeakSelf(self);
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] init];
    [[tap rac_gestureSignal] subscribeNext:^(id x) {
        JYShortMassageVC *message = [[JYShortMassageVC alloc] init];
        [weakself.naviVC pushViewController:message animated:YES];
    }];
    [self.inforView addGestureRecognizer:tap];
    
    self.productImage.image = [[GDLocalizableController userLanguage] isEqualToString:ENGLISH]?[UIImage imageNamed:@"pic_product_eng"]:[UIImage imageNamed:@"pic_product"];
    
    [self addGradientLayer:self.topImageView withHeight:185];
}

-(void)addGradientLayer:(UIView *)bgview withHeight:(CGFloat)height{
    CAGradientLayer *gradient = [CAGradientLayer layer];
    gradient.frame = CGRectMake(0, 0, ksrcwidth, height);
    gradient.startPoint = CGPointMake(0, 0);
    gradient.endPoint = CGPointMake(1, 0);
    gradient.colors = [NSArray arrayWithObjects:
                       (id)[UIColor getColor:@"#6647FF" alpha:1].CGColor,
                       (id)[UIColor getColor:@"#7CB0FF" alpha:1].CGColor,nil];
    [bgview.layer addSublayer:gradient];
}

-(void)addScrollview{
    SDCycleScrollView *cycleScrollView = [SDCycleScrollView cycleScrollViewWithFrame:CGRectMake(0, 0, ksrcwidth - 30, 150) delegate:self placeholderImage:[UIImage imageNamed:@"placeImage_home"]];
    cycleScrollView.backgroundColor = [UIColor colorWithRGBHex:@"#f7f7f9"];
    cycleScrollView.showPageControl = NO;
    cycleScrollView.pageControlAliment = SDCycleScrollViewPageContolAlimentCenter;
    cycleScrollView.currentPageDotImage = [UIImage imageNamed:@"dot_bg_select"];
    cycleScrollView.autoScrollTimeInterval = 3.f;
    cycleScrollView.pageDotImage = [UIImage imageNamed:@"dot_bg_unselect"];
    cycleScrollView.pageControlDotSize = CGSizeMake(4.f, 4.f);
    cycleScrollView.pageControlStyle = SDCycleScrollViewPageContolStyleAnimated;
    [self.scrollBgview addSubview:_cycleScrollView = cycleScrollView];
    
    self.scrollBgview.layer.shadowColor = [UIColor colorWithRGBHex:@"#6647FF"].CGColor;//阴影颜色
    self.scrollBgview.layer.shadowOffset = CGSizeMake(2, 2);//偏移距离
    self.scrollBgview.layer.shadowOpacity = 0.8f;//不透明度
    self.scrollBgview.layer.shadowRadius = 5;//半径
}

-(void)addProductView{
    self.upwardMultiMarqueeView = [[UUMarqueeView alloc] initWithFrame:CGRectMake(0, 0, ksrcwidth - 100, 44)];
    _upwardMultiMarqueeView.delegate = self;
    _upwardMultiMarqueeView.timeIntervalPerScroll = 3.f;
    _upwardMultiMarqueeView.timeDurationPerScroll = 0.5f;
    _upwardMultiMarqueeView.touchEnabled = YES;
    [self.productBgview addSubview:_upwardMultiMarqueeView];
}

-(void)addWSLScrollView{
    [self.leftRollview removeFromSuperview];
    self.leftRollview = nil;
    
    WSLRollView * stepRollView = [[WSLRollView alloc] initWithFrame:CGRectMake(0, 0, ksrcwidth/2, 114)];
    stepRollView.backgroundColor = [UIColor whiteColor];
    stepRollView.scrollStyle = WSLRollViewScrollStyleStep;
    stepRollView.scrollDirection = UICollectionViewScrollDirectionVertical;
    stepRollView.speed = 20;
    stepRollView.loopEnabled = YES;
    stepRollView.scrollEnabled = NO;
    stepRollView.delegate = self;
    [stepRollView registerClass:[DNSHomeRollCell class] forCellWithReuseIdentifier:@"DNSHomeRollCell"];
    [self.swScrollBg1 addSubview:_leftRollview = stepRollView];

    [self.swScrollBg1 bringSubviewToFront:self.mbLeft];
}

-(void)addWSRScrollView{
    [self.rightRollview removeFromSuperview];
    self.rightRollview = nil;
    WSLRollView * stepRollView = [[WSLRollView alloc] initWithFrame:CGRectMake(0, 0, ksrcwidth/2, 114)];
    stepRollView.backgroundColor = [UIColor whiteColor];
    stepRollView.scrollStyle = WSLRollViewScrollStyleStep;
    stepRollView.scrollDirection = UICollectionViewScrollDirectionVertical;
    stepRollView.speed = 20;
    stepRollView.delegate = self;
    stepRollView.loopEnabled = YES;
    stepRollView.scrollEnabled = NO;
    [stepRollView registerClass:[DNSHomeRollCell class] forCellWithReuseIdentifier:@"DNSHomeRollCell"];
    [self.swScrollBg2 addSubview:_rightRollview = stepRollView];
    
    [self.swScrollBg2 bringSubviewToFront:self.mbRight];
}

#pragma -mark SDCycleScrollViewDelegate
-(void)cycleScrollView:(SDCycleScrollView *)cycleScrollView didSelectItemAtIndex:(NSInteger)index{
    if (index >= self.banners.count) return;
    DNSBannerModel *banner = self.banners[index];
    //0不跳转，1原生跳转，2H5跳转
    if (banner.jump_type == 0) return;
    if (banner.jump_type == 2) {
        NSString *url = @"";
        if (banner.bannerid == 31 || banner.bannerid == 32) {
            NSString *token = [Manager takeoutTokenkey:access_token];
            NSDictionary *dict = [Manager takeoutUserTokenkey:JYLoginuser];
            url = [NSString stringWithFormat:@"%@/#?token=%@&channel=1&phone=%@",AssectString(banner.url),AssectString(token),AssectString(dict[JYPhone])];
        }else{
            url = AssectString(banner.url);
        }
        NewsWebViewController* webViewObj =  [[NewsWebViewController alloc] init];
        webViewObj.loadUrl = AssectString(url);
        [self.naviVC pushViewController:webViewObj animated:YES];
        return;
    }
    NSString *url = banner.url;
    if ([url isEqualToString:@"native1"]) {
        JieyiXieyiVC *xieyi = [[JieyiXieyiVC alloc] init];
        xieyi.type = 4;
        [self.naviVC pushViewController:xieyi animated:YES];
    }else if ([url isEqualToString:@"native2"]){
        [self.naviVC pushViewController:[InviteFriendVC new] animated:YES];
    }
}

-(void)cycleScrollView:(SDCycleScrollView *)cycleScrollView didScrollToIndex:(NSInteger)index{
    self.pageControl.currentPage = index;
}

#pragma mark - WSLRollViewDelegate
//返回itemSize
- (CGSize)rollView:(WSLRollView *)rollView sizeForItemAtIndex:(NSInteger)index{
    return CGSizeMake(self.swScrollBg1.width, 26);
}

//间隔
- (CGFloat)spaceOfItemInRollView:(WSLRollView *)rollView{
    return 20;
}

//内边距
- (UIEdgeInsets)paddingOfRollView:(WSLRollView *)rollView{
    return UIEdgeInsetsMake(0,0,0,0);
}

//点击事件
- (void)rollView:(WSLRollView *)rollView didSelectItemAtIndex:(NSInteger)index{
}

//当前页码
- (void)rollView:(WSLRollView *)rollView didRollItemToIndex:(NSInteger)currentIndex{
}

//返回自定义cell样式
-(WSLRollViewCell *)rollView:(WSLRollView *)rollView cellForItemAtIndex:(NSInteger)index{
    DNSHomeRollCell *cell = (DNSHomeRollCell *)[rollView dequeueReusableCellWithReuseIdentifier:@"DNSHomeRollCell" forIndex:index];
    NSDictionary *dict = rollView == self.leftRollview?self.buy_orders[index]:self.sell_orders[index];
    if (rollView == self.leftRollview) {
        cell.content.text = [NSString stringWithFormat:NSLocalizedString(@"购买了%@", nil),AssectString(dict[@"domain_name"])];
    }else{
        long type = [dict[@"order_status"] longValue];
        cell.content.text = type == 1?[NSString stringWithFormat:NSLocalizedString(@"挂卖了%@", nil),AssectString(dict[@"domain_name"])]:[NSString stringWithFormat:NSLocalizedString(@"出售了%@", nil),AssectString(dict[@"domain_name"])];
    }
    NSString *phone = AssectString(dict[@"user_phone"]);
    if (phone.length > 3) {
        phone = [phone stringByReplacingOccurrencesOfString:[phone substringFromIndex:phone.length - 3] withString:@"***"];
    }
    cell.nameLabel.text = phone;
    [cell.headerV sd_setImageWithURL:[NSURL URLWithString:AssectString(dict[@"avatar"])] placeholderImage:[UIImage imageNamed:@"pic_head"] options:SDWebImageAllowInvalidSSLCertificates];
    [cell refreshDataWithType:rollView==self.leftRollview?1:2];
    return cell;
}

#pragma mark - UUMarqueeViewDelegate
- (NSUInteger)numberOfVisibleItemsForMarqueeView:(UUMarqueeView*)marqueeView {
    return 2;
}

- (NSUInteger)numberOfDataForMarqueeView:(UUMarqueeView*)marqueeView {
    return self.products.count ? self.products.count : 0;
}

- (void)createItemView:(UIView*)itemView forMarqueeView:(UUMarqueeView*)marqueeView {
    // for upwardMultiMarqueeView
    itemView.backgroundColor = [UIColor whiteColor];
    
    UIImageView *icon = [[UIImageView alloc] initWithFrame:CGRectMake(0, (12 - 3)/2, 3, 3)];
    icon.tag = 1003;
    icon.backgroundColor = [UIColor colorWithRGBHex:@"#18181A"];
    icon.layer.masksToBounds = YES;
    icon.layer.cornerRadius = 1.5;
    [itemView addSubview:icon];
    
    UILabel *content = [[UILabel alloc] initWithFrame:CGRectMake(CGRectGetMaxX(icon.frame) + 5, 0.0f, CGRectGetWidth(itemView.bounds) - (CGRectGetMaxX(icon.frame) + 5), CGRectGetHeight(itemView.bounds))];
    content.font = [UIFont systemFontOfSize:12];
    content.textColor = [UIColor colorWithRGBHex:@"#54545C"];
    content.tag = 1001;
    [itemView addSubview:content];
    
    icon.y = CGRectGetMidY(content.frame) - 1.5;
}

- (void)updateItemView:(UIView*)itemView atIndex:(NSUInteger)index forMarqueeView:(UUMarqueeView*)marqueeView {
    // for upwardMultiMarqueeView
    SolutionModel *model = self.products[index];
    
    UILabel *content = [itemView viewWithTag:1001];
    content.text = model.title;
    
    UIImageView *icon = [itemView viewWithTag:1003];
    icon.backgroundColor = [UIColor colorWithRGBHex:@"#18181A"];
}

- (CGFloat)itemViewHeightAtIndex:(NSUInteger)index forMarqueeView:(UUMarqueeView*)marqueeView {
    // for upwardDynamicHeightMarqueeView
    return 12;
}

- (CGFloat)itemViewWidthAtIndex:(NSUInteger)index forMarqueeView:(UUMarqueeView*)marqueeView {
    // for leftwardMarqueeView
    return marqueeView.width;
}

- (void)didTouchItemViewAtIndex:(NSUInteger)index forMarqueeView:(UUMarqueeView*)marqueeView {
    ProductInformationVC *product =  [[ProductInformationVC alloc] init];
    [self.naviVC pushViewController:product animated:YES];
}

#pragma -mark getter
-(JhPageControl *)pageControl{
    if (!_pageControl) {
        _pageControl = [[JhPageControl alloc] init];
        _pageControl.frame = CGRectMake(0, 130, ksrcwidth - 32, 6);
        _pageControl.currentPage = 0;
        _pageControl.otherColor = [UIColor getColor:@"#ffffff" alpha:0.8];
        _pageControl.currentColor = [UIColor whiteColor];
        _pageControl.PageControlContentMode = JhPageControlContentModeCenter; //设置对齐方式
        _pageControl.controlSpacing = 10.0;  //间距
        _pageControl.marginSpacing = 0.f;  //距离初始位置 间距  默认10
        _pageControl.PageControlStyle = JhPageControlStyelDotAndRectangle;//长条样式
    }
    return _pageControl;
}

#pragma -mark setter
-(void)setBanners:(NSMutableArray *)banners{
    _banners = banners;
    NSMutableArray *temps = [NSMutableArray array];
    for (DNSBannerModel *model in banners) {
        [temps addObject:model.image_address];
    }
    self.cycleScrollView.imageURLStringsGroup = [temps copy];
    [self.scrollBgview addSubview:self.pageControl];
    self.pageControl.numberOfPages = temps.count;
}

-(void)setSell_orders:(NSArray *)sell_orders{
    _sell_orders = sell_orders;
    self.rightRollview.sourceArray = [sell_orders mutableCopy];
    [self.rightRollview reloadData];
    [self.rightRollview play];
}

-(void)setBuy_orders:(NSArray *)buy_orders{
    _buy_orders = buy_orders;
    self.leftRollview.sourceArray = [buy_orders mutableCopy];
    [self.leftRollview reloadData];
    [self.leftRollview play];
}

-(void)setProducts:(NSMutableArray *)products{
    _products = products;
    if (products.count == 0) return;
    [self.upwardMultiMarqueeView reloadData];
}
@end

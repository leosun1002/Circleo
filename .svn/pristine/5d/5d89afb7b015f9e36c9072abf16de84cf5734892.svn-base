//
//  ViewController.m
//  scroll嵌套Table+悬停效果
//
//  Created by chenleping on 2018/6/21.
//  Copyright © 2018年 IAPTest. All rights reserved.
//

#import "DNSShopVC.h"
#import "DNSShopModel.h"
#import "DNSShopHeadView.h"
#import "OYCountDownManager.h"
#import "DNSShopNoDataCell.h"
#import "DNSShopTableViewCell.h"
#import "DNSOrderManageVC.h"

@interface DNSShopVC ()<UIScrollViewDelegate,UITextFieldDelegate,UITableViewDelegate,UITableViewDataSource>{
    int page;
}

@property(nonatomic,strong)DNSFilterModel *filterModel;//筛选条件
@property(nonatomic,weak)UITableView *  tableView;
@property(nonatomic,weak)UIView * backview;
@property(nonatomic,weak)UIView *bgview;
@property(nonatomic,weak)DNSShopHeadView *header;
@property(nonatomic,strong)NSMutableArray * datas;

@end

@implementation DNSShopVC

- (void)dealloc {
    [kCountDownManager removeAllSource];
    [kCountDownManager invalidate];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    [self setUpChildControl];
    [self addRefresh];
    [self.tableView.mj_header beginRefreshing];
    [kCountDownManager start];
}

- (void)viewDidAppear:(BOOL)animated {
    [super viewDidAppear:animated];
    //处于第一个item的时候，才允许屏幕边缘手势返回
    [UIApplication sharedApplication].statusBarStyle = UIStatusBarStyleLightContent;
}

-(void)viewDidDisappear:(BOOL)animated{
    [super viewDidDisappear:animated];
    [self dismissLoading];
}

-(void)addRefresh{
    WeakSelf(self);
    PersonGifHeader *header = [PersonGifHeader headerWithRefreshingTarget:self refreshingAction:@selector(getRefreshData)];
    self.tableView.mj_header = header;
    
    //使用这个加载  可以隐藏最后的一行字
    self.tableView.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingBlock:^{
        [weakself getData:NO withAnimation:NO];
    }];
}

-(void)getRefreshData{
    //每次下拉刷新吧之前的筛选条件都置空
    self.filterModel = [DNSFilterModel new];
    [self.clearSubject sendNext:@""];
    [self getData:YES withAnimation:NO];
}

//请求网络但是不做下拉刷新
-(void)refreshWithNoMj{
    [self getData:YES withAnimation:NO];
}

- (void)setUpChildControl{
    self.filterModel = [[DNSFilterModel alloc] init];
    self.view.backgroundColor = [UIColor clearColor];
    
    UIView *bgview = [[UIView alloc] initWithFrame:CGRectMake(0, 0,ksrcwidth, ksrcheight - navBarHeight - 65)];
    bgview.backgroundColor = [UIColor whiteColor];
    bgview.opaque = 1;
    [self.view addSubview:_bgview = bgview];
    [self addTableCornerRadius];

    UITableView * tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0,ksrcwidth, ksrcheight - navBarHeight - 65) style:UITableViewStyleGrouped];
    tableView.backgroundColor = [UIColor whiteColor];
    tableView.delegate = self;
    tableView.dataSource = self;
    tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    tableView.showsVerticalScrollIndicator = NO;
    tableView.showsVerticalScrollIndicator = NO;
    [tableView registerNib:[UINib nibWithNibName:@"DNSShopTableViewCell" bundle:nil] forCellReuseIdentifier:@"DNSShopTableViewCell"];
    [tableView registerNib:[UINib nibWithNibName:@"DNSShopNoDataCell" bundle:nil] forCellReuseIdentifier:@"DNSShopNoDataCell"];
    [self.bgview addSubview:_tableView = tableView];
}

-(void)addTableCornerRadius{
    self.bgview.layer.cornerRadius = 10;
    self.bgview.layer.masksToBounds = YES;
}

//如果筛选条件后无法下拉刷新  所有需要动画
-(void)getData:(BOOL)ifFresh withAnimation:(BOOL)animation{
    WeakSelf(self);
    ifFresh?(page = 1):page++;
    NSString *price = AssectString(self.filterModel.price);
    if ([price containsString:@"-"]) {
        price = [price stringByReplacingOccurrencesOfString:@"-" withString:@","];
    }
    NSDictionary *dict = [self dealwitData:page];
    if (animation) {
        [self showLoading:@"" allowsOpOperation:YES];
    }
    [WebServices getFormReqUrl:self.pageType == DNSShopVCTypeSell?ShopHangSale:ShopHangBuy param:dict loadingTime:12.f callbackBlock:^(NSDictionary *json, NSInteger startCode, NSString *error) {
        !animation?:[weakself dismissLoading];
        if(json != nil){
            if ([AssectString(json[@"code"]) isEqualToString:@"1"]) {
                !ifFresh?:[weakself.datas removeAllObjects];
                NSMutableArray<DNSShopModel *> *applicationList = [DNSShopModel mj_objectArrayWithKeyValuesArray:json[@"data"][@"data"]];
                [weakself.datas addObjectsFromArray:applicationList];
                // 调用[kCountDownManager reload]
                [kCountDownManager reload];
            }
        }
        [weakself.tableView reloadData];
        [weakself.tableView.mj_header endRefreshing];
        [weakself.tableView.mj_footer endRefreshing];
    }];
}

-(NSDictionary *)dealwitData:(int)page{
    //后缀
    NSString *domain_suffix = [AssectString(self.filterModel.domain_suffix) isEqualToString:NSLocalizedString(@"不限", nil)]?@"":AssectString(self.filterModel.domain_suffix);
    
    //价格
    NSString *price = AssectString(self.filterModel.price);
    if ([price containsString:@" "]) {
        price = [price componentsSeparatedByString:@" "][0];
    }
    price = [price isEqualToString:NSLocalizedString(@"不限", nil)]?@"":price;
    
    //长度
    NSString *domain_length = AssectString(self.filterModel.domain_length);
    if ([[GDLocalizableController userLanguage] isEqualToString:ENGLISH]) {
        if ([domain_length containsString:NSLocalizedString(@"以上", nil)]) {
            domain_length = [domain_length stringByReplacingOccurrencesOfString:NSLocalizedString(@"以上", nil) withString:@""];
        }else{
            if ([domain_length isEqualToString:@""] || [domain_length isEqualToString:NSLocalizedString(@"不限", nil)]) {
                domain_length = [domain_length isEqualToString:NSLocalizedString(@"不限", nil)]?@"":domain_length;
            }else{
                domain_length = [NSString stringWithFormat:@"%@,%@",domain_length,domain_length];
            }
        }
    }else{
        if ([domain_length containsString:NSLocalizedString(@"个", nil)]) {
            domain_length = [domain_length stringByReplacingOccurrencesOfString:NSLocalizedString(@"个", nil) withString:@""];
            if ([domain_length containsString:NSLocalizedString(@"以上", nil)]) {
                domain_length = [domain_length stringByReplacingOccurrencesOfString:NSLocalizedString(@"以上", nil) withString:@""];
            }else{
                domain_length = [NSString stringWithFormat:@"%@,%@",domain_length,domain_length];
            }
        }
        domain_length = [domain_length isEqualToString:NSLocalizedString(@"不限", nil)]?@"":domain_length;
    }
    
    //天数
    NSString *days = AssectString(self.filterModel.days);
    if ([days containsString:NSLocalizedString(@"天以上", nil)]) {
        days = [days stringByReplacingOccurrencesOfString:NSLocalizedString(@"天以上", nil) withString:@""];
    }
    days = [days isEqualToString:NSLocalizedString(@"不限", nil)]?@"":days;
    
    //类型
    NSString *type = AssectString(self.filterModel.type);
    type = [type isEqualToString:NSLocalizedString(@"一口价", nil)]?@"1":@"";
    
    NSDictionary *dict = @{@"time_order":AssectString(self.filterModel.time_order),@"price_order":AssectString(self.filterModel.price_order),@"domain_suffix":domain_suffix,@"price":price,@"domain_length":domain_length,@"days":days,@"type":type,@"domain_name":AssectString(self.filterModel.domain_name),@"page":[NSString stringWithFormat:@"%d",page]};
    return dict;
}

-(void)refreshWithFilter:(DNSFilterModel *)filterModel{
    self.filterModel = filterModel;
    [self.tableView setContentOffset:CGPointMake(0, 0) animated:YES];
    [self getData:YES withAnimation:YES];
}

-(void)goSearch:(NSString *)goSearch{
    self.filterModel.domain_name = goSearch;
    [self.tableView setContentOffset:CGPointMake(0, 0) animated:YES];
    [self getData:YES withAnimation:YES];
}

#pragma mark --- UITableViewDataSource
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return 1;
}

-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    return 55;
}

-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    DNSShopHeadView *header = [[DNSShopHeadView alloc] init];
    if (self.pageType == DNSShopVCTypeBuy) {
        [header.timeBtn setTitle:NSLocalizedString(@"求购时间", nil) forState:UIControlStateNormal];
        [header.priceBtn setTitle:NSLocalizedString(@"求购价格", nil) forState:UIControlStateNormal];
    }
    NSString *time_order = AssectString(self.filterModel.time_order);
    if ([time_order isEqualToString:@""]) {
        [header.timeBtn setTitleColor:[UIColor colorWithRGBHex:@"#9999A3"] forState:UIControlStateNormal];
        header.timeBtn.titleLabel.font = [UIFont systemFontOfSize:14];
        [header.timeBtn setImage:[UIImage imageNamed:@"icon_px"] forState:UIControlStateNormal];
    }else if ([time_order isEqualToString:@"asc"]){
        [header.timeBtn setTitleColor:[UIColor colorWithRGBHex:@"#5151F0"] forState:UIControlStateNormal];
        header.timeBtn.titleLabel.font = [UIFont boldSystemFontOfSize:14];
        [header.timeBtn setImage:[UIImage imageNamed:@"icon_px_up"] forState:UIControlStateNormal];
    }else{
        [header.timeBtn setTitleColor:[UIColor colorWithRGBHex:@"#5151F0"] forState:UIControlStateNormal];
        header.timeBtn.titleLabel.font = [UIFont boldSystemFontOfSize:14];
        [header.timeBtn setImage:[UIImage imageNamed:@"icon_px_down"] forState:UIControlStateNormal];
    }
    NSString *price_order = AssectString(self.filterModel.price_order);
    if ([price_order isEqualToString:@""]) {
        [header.priceBtn setTitleColor:[UIColor colorWithRGBHex:@"#9999A3"] forState:UIControlStateNormal];
        header.priceBtn.titleLabel.font = [UIFont systemFontOfSize:14];
        [header.priceBtn setImage:[UIImage imageNamed:@"icon_px"] forState:UIControlStateNormal];
    }else if ([price_order isEqualToString:@"asc"]){
        [header.priceBtn setTitleColor:[UIColor colorWithRGBHex:@"#5151F0"] forState:UIControlStateNormal];
        header.priceBtn.titleLabel.font = [UIFont boldSystemFontOfSize:14];
        [header.priceBtn setImage:[UIImage imageNamed:@"icon_px_up"] forState:UIControlStateNormal];
    }else{
        [header.priceBtn setTitleColor:[UIColor colorWithRGBHex:@"#5151F0"] forState:UIControlStateNormal];
        header.priceBtn.titleLabel.font = [UIFont boldSystemFontOfSize:14];
        [header.priceBtn setImage:[UIImage imageNamed:@"icon_px_down"] forState:UIControlStateNormal];
    }
    WeakSelf(self);
    [[header.filterBtn rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        [weakself.filterSubject sendNext:weakself.filterModel];
    }];
    [[header.orderBtn rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        DNSOrderManageVC *orderManage = [[DNSOrderManageVC alloc] init];
        orderManage.status = @"";
        [weakself.naviController pushViewController:orderManage animated:YES];
    }];
    [[header.timeBtn rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        NSString *time_order = AssectString(weakself.filterModel.time_order);
        if ([time_order isEqualToString:@""]) {
            weakself.filterModel.time_order = @"asc";
            weakself.filterModel.price_order = @"";
        }else if ([time_order isEqualToString:@"asc"]){
            weakself.filterModel.time_order = @"desc";
            weakself.filterModel.price_order = @"";
        }else{
            weakself.filterModel.time_order = @"asc";
            weakself.filterModel.price_order = @"";
        }
        [weakself.tableView setContentOffset:CGPointMake(0, 0) animated:YES];
        [weakself getData:YES withAnimation:YES];

    }];
    [[header.priceBtn rac_signalForControlEvents:(UIControlEventTouchUpInside)] subscribeNext:^(id x) {
        NSString *price_order = AssectString(weakself.filterModel.price_order);
        if ([price_order isEqualToString:@""]) {
            weakself.filterModel.price_order = @"asc";
            weakself.filterModel.time_order = @"";
        }else if ([price_order isEqualToString:@"asc"]){
            weakself.filterModel.price_order = @"desc";
            weakself.filterModel.time_order = @"";
        }else{
            weakself.filterModel.price_order = @"asc";
            weakself.filterModel.time_order = @"";
        }
        [weakself.tableView setContentOffset:CGPointMake(0, 0) animated:YES];
        [weakself getData:YES withAnimation:YES];
    }];
    return _header = header;
}

-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    return 0.01;
}

-(UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section{
    return [UIView new];
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    if (self.datas.count == 0) {
        return 1;
    }
    return self.datas.count;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (self.datas.count == 0) {
        return self.view.height - 42;
    }
    return 114;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (self.datas.count == 0) {
        DNSShopNoDataCell *cell = [tableView dequeueReusableCellWithIdentifier:@"DNSShopNoDataCell"];
        cell.nameLabel.text = self.pageType == DNSShopVCTypeSell?NSLocalizedString(@"当前暂无挂卖订单", nil):NSLocalizedString(@"当前暂无求购订单", nil);
        return cell;
    }
    DNSShopTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"DNSShopTableViewCell"];
    cell.type = self.pageType == DNSShopVCTypeSell?0:1;
    cell.model = self.datas[indexPath.row];
    return cell;
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    if (self.datas.count == 0)return;
    DNSShopModel *model = self.datas[indexPath.row];
    [self.selectSubject sendNext:[NSString stringWithFormat:@"%ld",model.shopid]];
}

#pragma -mark getter
-(NSMutableArray *)datas{
    if (!_datas) {
        _datas = [NSMutableArray array];
    }
    return _datas;
}

#pragma mark - JXCategoryListContentViewDelegate
- (UIView *)listView {
    return self.view;
}

- (void)listDidAppear {}

- (void)listDidDisappear {}
@end
